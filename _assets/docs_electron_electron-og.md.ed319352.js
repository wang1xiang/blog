import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"Electron获取对方URL中的OG标签","frontmatter":{"date":"2023-12-18","title":"Electron获取对方URL中的OG标签","tags":["electron"],"describe":"Electron获取对方URL中的OG标签"},"headers":[{"level":3,"title":"Electron 接入方案：","slug":"electron-接入方案："}],"relativePath":"docs/electron/electron-og.md","lastUpdated":1743558905233.9429}';var p={};const o=[a('<p>要使用 JavaScript 获取对方 URL 中的 OG 标签，你可以使用 fetch 函数来获取对方网页的 HTML 内容，然后使用 DOM 解析器（如 DOMParser）来解析 HTML 并提取 OG 标签的值。</p><p>以下是一个示例代码，演示如何获取对方 URL 中的 OG 标签：</p><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getOGTags</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 使用fetch函数获取对方网页的HTML内容</span>\n  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token comment">// 创建DOM解析器</span>\n  <span class="token keyword">const</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DOMParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> doc <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parseFromString</span><span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">&#39;text/html&#39;</span><span class="token punctuation">)</span>\n  <span class="token comment">// 获取OG标签的值</span>\n  <span class="token keyword">const</span> ogTitle <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;meta[property=&quot;og:title&quot;]&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> ogDescription <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;meta[property=&quot;og:description&quot;]&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> ogImage <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;meta[property=&quot;og:image&quot;]&#39;</span><span class="token punctuation">)</span>\n  <span class="token comment">// 输出OG标签的值</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Title:&#39;</span><span class="token punctuation">,</span> ogTitle<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Description:&#39;</span><span class="token punctuation">,</span> ogDescription<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Image:&#39;</span><span class="token punctuation">,</span> ogImage<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 调用函数，传入对方URL</span>\n<span class="token function">getOGTags</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><p>在上面的代码中，我们定义了一个 getOGTags 函数，该函数接受一个 URL 作为参数。函数内部使用 fetch 函数获取对方网页的 HTML 内容，并使用 DOMParser 解析 HTML。然后，我们使用 querySelector 方法来选择具有特定属性的 meta 标签，并使用 getAttribute 方法获取标签的属性值。最后，我们将 OG 标签的值输出到控制台。</p><p>请注意，由于跨域限制，你可能无法直接从其他域名获取 OG 标签的值。如果需要从其他域名获取 OG 标签，你可能需要使用服务器端代码或 CORS（跨源资源共享）策略来处理跨域请求。</p><h3 id="electron-接入方案："><a class="header-anchor" href="#electron-接入方案：" aria-hidden="true">#</a> Electron 接入方案：</h3><ol><li><p>获取网站信息在主进程，然后 IPC 通信传递到子进程</p></li><li><p>获取到网站信息后增加缓存策略（例如以 url 为 key,缓存 100 个链接，超过 100 个删除最久的 50 个）</p></li></ol><p>主进程获取方法 getWebInfo</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getWebInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">url</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> urlObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>\n  <span class="token comment">// 只解析https地址，非下载地址如（.png\\.zip）</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>\n    urlObj<span class="token punctuation">.</span>protocol <span class="token operator">!==</span> <span class="token string">&#39;https:&#39;</span> <span class="token operator">||</span>\n    <span class="token punctuation">(</span>urlObj<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>amp<span class="token punctuation">;</span><span class="token operator">&amp;</span>amp<span class="token punctuation">;</span>\n      <span class="token operator">!</span><span class="token punctuation">(</span>\n        urlObj<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.html&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span>\n        urlObj<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.htm&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span>\n        urlObj<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.aspx&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span>\n        urlObj<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.jsp&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span>\n        urlObj<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;.php&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">site_name</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span>\n  <span class="token comment">// 有些以www开头的网址获取不到内容，需要去掉</span>\n  <span class="token keyword">const</span> urlStrip <span class="token operator">=</span> <span class="token function">normalizeUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">stripWWW</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios\n    <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>urlStrip<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html; charset=utf-8&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">5000</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>res<span class="token operator">?.</span>data <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> title <span class="token operator">=</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;meta[property=&quot;og:title&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;meta[name=&quot;title&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> description <span class="token operator">=</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;meta[property=&quot;og:description&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;meta[name=&quot;description&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#js_content&#39;</span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> site_name <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;meta[property=&quot;og:site_name&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">let</span> image <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;meta[property=&quot;og:image&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;meta[property=&quot;og:image:url&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>\n  image <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> image <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>\n  <span class="token keyword">let</span> icon <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;link[rel=&quot;icon&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;link[rel=&quot;shortcut icon&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>\n  icon <span class="token operator">=</span> icon<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> icon <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span> title<span class="token punctuation">,</span> description<span class="token punctuation">,</span> image<span class="token punctuation">,</span> icon<span class="token punctuation">,</span> site_name <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>IPC 通信</p><div class="language-js"><pre><code><span class="token constant">IPC_R2M2R</span><span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token string">&#39;getWebInfo&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">getWebInfo</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>渲染进程缓存策略</p><div class="language-js"><pre><code><span class="token keyword">const</span> webInfoMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token comment">// 删除50个</span>\n<span class="token keyword">const</span> <span class="token function-variable function">_deleteInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  webInfoMap<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  webInfoMap<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;=</span> <span class="token number">49</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      webInfoMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>\n      <span class="token keyword">return</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  num <span class="token operator">=</span> <span class="token number">50</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getUrlInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>webInfoMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> webInfoMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> info <span class="token operator">=</span> <span class="token keyword">await</span> window<span class="token punctuation">.</span>electronIPC<span class="token punctuation">.</span><span class="token function">getWebInfo</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>webInfoMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      webInfoMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> info<span class="token punctuation">)</span>\n      num<span class="token operator">++</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">_deleteInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> info\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',13)];p.render=function(a,t,p,e,c,u){return n(),s("div",null,o)};export{t as __pageData,p as default};
