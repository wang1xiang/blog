import{f as a,g as n,J as s}from"./common-03e46d7f.js";const t='{"title":"Electron正式包sqlite数据库文件路径问题","frontmatter":{"date":"2024-02-10","title":"Electron正式包sqlite数据库文件路径问题","tags":["electron"],"describe":"Electron正式包sqlite数据库文件路径问题"},"headers":[{"level":2,"title":"问题描述","slug":"问题描述"},{"level":2,"title":"原因","slug":"原因"},{"level":2,"title":"解决","slug":"解决"}],"relativePath":"docs/electron/electron-sqlite3-bug.md","lastUpdated":1742819970392.5378}';var p={},e="/blog/_assets/electron-sqlite3-bug2.43f4403d.png";const o=[s('<h2 id="问题描述"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> 问题描述</h2><p>本地以及测试包集成 sqlite 并使用正常。线上打包发布访问 sqlite 失败，访问不到数据库文件。</p><p><img src="'+e+'" alt="electron-sqlite3-bug1"></p><h2 id="原因"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><p>electron 打包开启 asar 配置导致数据库文件路径访问不到。</p><p>asar 是一种用于构建跨平台桌面应用程序的开源框架，而 VSCode 就是基于 Electron 构建的。在 Electron 中，应用程序的资源文件通常以普通文件的形式存在，这包括 JavaScript、CSS、HTML 文件等。然而，当插件的文件数量庞大时，文件系统的读取和加载操作可能会导致性能下降。这时，我们可以使用 asar 来将插件的资源文件打包成一个单独的文件，以提高加载和访问速度。</p><p><img src="'+e+'" alt="electron-sqlite3-bug2"></p><h2 id="解决"><a class="header-anchor" href="#解决" aria-hidden="true">#</a> 解决</h2><p>打包配置中将目标文件夹放入根目录，然后在代码中进行拼接。</p><div class="language-js"><pre><code><span class="token punctuation">{</span>\n　　<span class="token operator">...</span>\n　　asar<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n　　extraResource<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./db-config</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n　　<span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token literal-property property">app_path</span><span class="token operator">:</span> any <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">getAppPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\napp_path <span class="token operator">=</span> app_path<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&#39;/app.asar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">//  asar开启</span>\n<span class="token keyword">let</span> db\n<span class="token keyword">const</span> db_path <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>app_path<span class="token punctuation">,</span> <span class="token string">&#39;/db-config/sqlite3.db&#39;</span><span class="token punctuation">)</span>\n</code></pre></div>',11)];p.render=function(s,t,p,e,l,c){return a(),n("div",null,o)};export{t as __pageData,p as default};
