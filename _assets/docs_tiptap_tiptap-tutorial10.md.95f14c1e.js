import{f as n,g as s,J as a}from"./common-03e46d7f.js";const p='{"title":"文档内脑图， WORD 脑图扩展","frontmatter":{"date":"2024-03-02","title":"文档内脑图， WORD 脑图扩展","tags":["tiptap"],"describe":"tiptap-tutorial10"},"relativePath":"docs/tiptap/tiptap-tutorial10.md","lastUpdated":1743046188833.0461}';var t={};const o=[a('<p>需求：WORD 中不涉及具体脑图代码、只渲染需要操作的脑图（性能）、兼容历史记录</p><ol><li><p>属性：height、脑图 ID、脑图快照。默认显示快照，选中后再渲染脑图</p><div class="language-js"><pre><code><span class="token function">addAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 默认半屏高</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;50vh&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;mind-id&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">snapshot</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 默认快照</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;https://faworkfile.xxx.cn/userUpload/docs/rjU0JlwXSfvtcdjiGExIQgQIczZUExReBjOcqzTI.svg&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div></li><li><p>方法：插入脑图、更新脑图、删除脑图。插入脑图时发送创建请求，请求失败删除脑图，成功以 addToHistory：false 更新脑图</p><div class="language-js"><pre><code><span class="token function">addCommands</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token keyword">return</span> <span class="token punctuation">{</span>\n  <span class="token comment">// prettier-ignore</span>\n  <span class="token function-variable function">setMind</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> commands<span class="token punctuation">,</span> editor <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">api_create_mind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">mindId</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 更新ID</span>\n      editor<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">updateMind</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">oldId</span><span class="token operator">:</span> mindIngId<span class="token punctuation">,</span> <span class="token literal-property property">newId</span><span class="token operator">:</span> mindId <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>\n      <span class="token comment">// 删除节点</span>\n      editor<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">removeMind</span><span class="token punctuation">(</span>mindIngId<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> mindIngId <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ing-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">uuidv4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token comment">// 创建中的临时ID</span>\n    <span class="token keyword">return</span> commands<span class="token punctuation">.</span><span class="token function">insertContent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>\n      <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;mind-id&#39;</span><span class="token operator">:</span> mindIngId <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// prettier-ignore</span>\n  <span class="token function-variable function">updateMind</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> oldId<span class="token punctuation">,</span> newId <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> tr <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> currPos <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>\n    tr<span class="token punctuation">.</span>doc<span class="token punctuation">.</span><span class="token function">nodesBetween</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> tr<span class="token punctuation">.</span>doc<span class="token punctuation">.</span>content<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> pos</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>currPos <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> node<span class="token punctuation">.</span>type<span class="token punctuation">.</span>name <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>attrs<span class="token punctuation">[</span><span class="token string">&#39;mind-id&#39;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> oldId<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>\n      currPos <span class="token operator">=</span> pos\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>currPos <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 以 不要历史记录的方法 更新脑图ID</span>\n      tr<span class="token punctuation">.</span><span class="token function">setMeta</span><span class="token punctuation">(</span><span class="token string">&#39;addToHistory&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>\n      tr<span class="token punctuation">.</span><span class="token function">setNodeMarkup</span><span class="token punctuation">(</span>currPos<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;mind-id&#39;</span><span class="token operator">:</span> newId <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// prettier-ignore</span>\n  <span class="token function-variable function">removeMind</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">mindId</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> tr<span class="token punctuation">,</span> state <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> currPos <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>\n    tr<span class="token punctuation">.</span>doc<span class="token punctuation">.</span><span class="token function">nodesBetween</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> tr<span class="token punctuation">.</span>doc<span class="token punctuation">.</span>content<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> pos</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>currPos <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> node<span class="token punctuation">.</span>type<span class="token punctuation">.</span>name <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>attrs<span class="token punctuation">[</span><span class="token string">&#39;mind-id&#39;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> mindId<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>\n      currPos <span class="token operator">=</span> pos\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>currPos <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 删除脑图节点</span>\n      tr<span class="token punctuation">.</span><span class="token function">replaceWith</span><span class="token punctuation">(</span>currPos<span class="token punctuation">,</span> currPos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> state<span class="token punctuation">.</span>schema<span class="token punctuation">.</span>nodes<span class="token punctuation">.</span>paragraph<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div></li><li><p>QtableMind.vue</p><p>a. ID 为临时 ID 显示空节点 b. 节点未聚焦显示快照（一张图片，在顶层），一个空 DIV <code>&lt;div class=&quot;mind-node&quot; :data-id=&quot;mindId&quot;&gt;&lt;/div&gt;</code> c. 节点聚焦，发送 statusChange 事件给 web 项目 { type: &#39;renderMind&#39;, payload: mindId } • web 项目收到后调用 mind/InDoc.vue • mind/InDoc.vue 组件以 <code>&lt;teleport to=&#39;.mind-node[data-id=&quot;mindId&quot;]&#39;&gt;</code> 方式渲染进 WORD • MIND 渲染完成后发送自定义事件 mindRendered • onBeforeUnmount 钩子中生成脑图快照 base64 d. 收到 mindRendered 事件隐藏快照 e. 节点失焦，发送 statusChange 事件给 web 项目 { type: &#39;renderMind&#39;, payload: &#39;&#39; } • web 项目收到后删除 mind/InDoc.vue • mind/InDoc.vue onBeforeUnmount 钩子生成脑图快照 base64，发送自定义事件 mindDestroy f. 收到 mindDestroy 事件以 base64 当作快照 g. 将 base64 上传到服务器，拿到 URL 后替换节点 snapshot 属性</p></li></ol>',2)];t.render=function(a,p,t,e,c,u){return n(),s("div",null,o)};export{p as __pageData,t as default};
