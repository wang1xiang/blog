import{f as n,g as a,J as s}from"./common-03e46d7f.js";const t='{"title":"一文搞定前端html内容转图片、pdf和word等文件","frontmatter":{"date":"2023-04-10","title":"一文搞定前端html内容转图片、pdf和word等文件","tags":["javascript","prosemirror"],"describe":"富文本导出图片、pdf和word"},"headers":[{"level":2,"title":"介绍下用到的库","slug":"介绍下用到的库"},{"level":3,"title":"html2canvas","slug":"html2canvas"},{"level":3,"title":"jsPDF","slug":"jspdf"},{"level":2,"title":"图片的转换","slug":"图片的转换"},{"level":2,"title":"pdf 的转换","slug":"pdf-的转换"},{"level":3,"title":"解决 pdf 导出画面不清晰","slug":"解决-pdf-导出画面不清晰"},{"level":3,"title":"小瑕疵","slug":"小瑕疵"},{"level":2,"title":"总结","slug":"总结"}],"relativePath":"docs/prosemirror/html2docs-pdf.md","lastUpdated":1742523053425.6392}';var p={};const e=[s('<blockquote><p>接上篇<a href="https://juejin.cn/post/7220244579671916604" target="_blank" rel="noopener noreferrer">富文本编辑器 html 内容转 word：html-docs-js 避坑指南</a>，我们已经完成了 html 内容转 word 文档的&gt; 需求，接着咱们看下图片和 pdf 的处理。</p></blockquote><h2 id="介绍下用到的库"><a class="header-anchor" href="#介绍下用到的库" aria-hidden="true">#</a> 介绍下用到的库</h2><h3 id="html2canvas"><a class="header-anchor" href="#html2canvas" aria-hidden="true">#</a> html2canvas</h3><p>图片和 pdf 的转换都会用到<a href="https://html2canvas.hertzen.com/" target="_blank" rel="noopener noreferrer">html2canvas</a>来完成，通过<a href="https://html2canvas.hertzen.com/documentation" target="_blank" rel="noopener noreferrer">官网</a>上的介绍，我们可以总结一下它的特点：</p><ol><li>不需要后台支持，通过纯浏览器端”截图“；</li><li>可对部分或整个网页进行“截图”；</li><li>基于 DOM（遍历页面的 DOM），利用可用的信息构建屏幕截图；</li><li>有些 css 属性未被支持，可查看<a href="https://html2canvas.hertzen.com/features/" target="_blank" rel="noopener noreferrer">支持的 css 属性列表</a>；</li><li>受同源策略影响；</li><li>无法渲染 iframe，flash 等内容。</li></ol><h3 id="jspdf"><a class="header-anchor" href="#jspdf" aria-hidden="true">#</a> jsPDF</h3><p>pdf 的转换用到<a href="https://github.com/parallax/jsPDF" target="_blank" rel="noopener noreferrer">jsPDF</a>，可以看看这个<a href="https://github.com/linwalker/render-html-to-pdf" target="_blank" rel="noopener noreferrer">demo</a>，对 jsPDF 的介绍比较详细。</p><h2 id="图片的转换"><a class="header-anchor" href="#图片的转换" aria-hidden="true">#</a> 图片的转换</h2><p>相比于 html 转 word 来说，图片和 pdf 的转换相对来说简单了许多，咱们来看下图片的转换过程，主要有以下几个步骤：</p><ol><li><p>克隆需要截图的 DOM 元素</p><p>通过<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Node/cloneNode" target="_blank" rel="noopener noreferrer">cloneNode</a>将需要克隆的节点生成一份副本，这一步的目的是：我们不能直接对原始 DOM 进行操作，因为会影响页面布局。所以可以修改克隆后的 DOM 节点，通过修改节点的样式（border、box-shadow 等）或修改节点宽高，达到我们想要的截图效果。</p><div class="language-js"><pre><code><span class="token keyword">const</span> cloneEle <span class="token operator">=</span> ele<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token comment">// 对克隆的节点进行操作</span>\ncloneEle<span class="token punctuation">.</span>style<span class="token punctuation">.</span>xxx <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n</code></pre></div></li><li><p>通过 html2canvas 截图</p><p>我们将第一步克隆到的 DOM 进行一个清理的动作，清理的作用是：移除不需要截图的 DOM 节点；将克隆的节点添加到 DOM 上，并返回新节点和删除节点的方法。删除节点<code>cleanHtmlRecover</code>方法用于在截图完成后移除 DOM 元素。</p><p>接着使用 html2canvas 方法将 DOM 绘制为 canvas，通过调用 canvas 对象的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/toDataURL" target="_blank" rel="noopener noreferrer">toDataURL 方法</a>将 canvas 转换成图片。</p><p>这里需要为 html2canvas 提供第二个参数<code>useCORS: true</code>，开启使用 CORS 从服务器加载图像，不然如果图片不同源时就会导致一片白。更多参数配置请参考<a href="https://html2canvas.hertzen.com/configuration" target="_blank" rel="noopener noreferrer">configuration</a>。</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">cleanHtml</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">ele</span><span class="token operator">:</span> HTMLElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n <span class="token comment">// 移除不需要截图的DOM节点</span>\n <span class="token keyword">const</span> selectElements <span class="token operator">=</span> ele<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;select&#39;</span><span class="token punctuation">)</span>\n selectElements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">sel</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>sel<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n <span class="token keyword">const</span> title <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>\n\n <span class="token keyword">const</span> warp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>\n <span class="token comment">// 图片、pdf导出背景色不是白色</span>\n warp<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&#39;absolute&#39;</span>\n warp<span class="token punctuation">.</span>style<span class="token punctuation">.</span>zIndex <span class="token operator">=</span> <span class="token string">&#39;-1&#39;</span>\n warp<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span>\n document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>warp<span class="token punctuation">)</span>\n <span class="token keyword">return</span> <span class="token punctuation">{</span>\n   warp<span class="token punctuation">,</span>\n   <span class="token function-variable function">cleanHtmlRecover</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n     warp<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n   <span class="token punctuation">}</span>\n <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> warp<span class="token punctuation">,</span> cleanHtmlRecover <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">cleanHtml</span><span class="token punctuation">(</span>cloneEle<span class="token punctuation">)</span>\n<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n <span class="token function">Html2canvas</span><span class="token punctuation">(</span>warp<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">useCORS</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">canvas</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n     <span class="token comment">// 生成截图</span>\n     <span class="token keyword">const</span> image <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpg&#39;</span><span class="token punctuation">)</span>\n     <span class="token comment">// 下载图片</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n     <span class="token function">cleanHtmlRecover</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n     <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div></li><li><p>下载图片</p><p>上一步获取到转换后的图片后，就可以通过<code>a</code>标签的方式来下载图片，我们可以通过 dispatchEvent 来模拟点击事件完成下载。对 dispatchEvent 的其他使用可以看<a href="https://juejin.cn/post/7184632272132735035" target="_blank" rel="noopener noreferrer">这篇文章</a>。</p><div class="language-js"><pre><code><span class="token comment">// 下载图片</span>\n<span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>\na<span class="token punctuation">.</span>download <span class="token operator">=</span> filename\na<span class="token punctuation">.</span>href <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpg&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MouseEvent</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>\na<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>\n</code></pre></div></li></ol><h2 id="pdf-的转换"><a class="header-anchor" href="#pdf-的转换" aria-hidden="true">#</a> pdf 的转换</h2><p>图片的导出已经完成，那么 pdf 的导出应该如何做呢？</p><p>一开始我们是用的<a href="https://github.com/eKoopmans/html2pdf.js" target="_blank" rel="noopener noreferrer">html2pdf-jspdf2</a>，它就是使用 html2canvas 和 jsPDF 结合在一起，通过和 html2canvas 将 html 内容转为 canvas，再通过 jsPDF 将 canvas 转为 pdf。说几个我遇到的问题（可能是我用的不对）：</p><ol><li>在 JSPDF 中我设置了<code>format: &#39;a4&#39;</code>，意思是使用 pdf 来导出，页面同样设置为 a4，但导出的 pdf 文件宽度显示不全；</li><li>我们页面可以设置成 A3、A4、A5 几种特定纸张，并且支持设置宽高自定义纸张，但当我传入宽高后，发现得到的 pdf 文件不是我设置好的宽高；</li><li>没有了，直接换库跑路 😄</li></ol><p>遇到问题解决不了怎么办？找 leader，找 leader，还是找 leader</p><p>通过我们一阵商量，最终确定了一个方案：先用 html2canvas 将 html 转换为图片，再利用 jsPDF 提供的<a href="http://raw.githack.com/MrRio/jsPDF/master/docs/module-addImage.html#~addImage" target="_blank" rel="noopener noreferrer">addImage</a>方法将图片贴到 pdf 中，因为图片导出目前是没有什么问题，而且展示效果也挺好，所以导出的 pdf 应该也不会有什么问题。</p><p>接下来就是和产品掰头环节，巴拉巴拉...，成功让他们改了需求。</p><p>最后看下实现过程：</p><p>html2canvas 的使用与前面生成图片一样，接着通过<code>generatePDF</code>生成 pdf。</p><div class="language-js"><pre><code><span class="token operator">...</span>\n<span class="token function">Html2canvas</span><span class="token punctuation">(</span>warp<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">useCORS</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">canvas</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">generatePDF</span><span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token operator">...</span>\n</code></pre></div><p>我们看下<code>generatePDF</code>的实现步骤：</p><ol><li>计算一页 A4 纸能显示当前 html 生成的 canvas 高度；</li><li>如果 canvas 的高度未超过一页 A4 纸的显示高度，无需分页，直接贴图导出；</li><li>否则需要分页打印，分页打印思路如下： <ol><li>设置变量<code>leftHeight</code>记录剩余高度，打印完一页后 leftHeight 减去已经打印的 canvas 的高度 pageHeight，如果剩余高度大于 0，说明没打印完，通过<a href="http://raw.githack.com/MrRio/jsPDF/master/docs/jsPDF.html#addPage" target="_blank" rel="noopener noreferrer">addPage()</a>增加分页继续打印；</li><li>设置变量<code>position</code>记录打印开始的距离头部的位置，打印完一页后 position 增加一页 A4 纸的高度继续打印。</li></ol></li></ol><p>最后贴上完整代码：</p><div class="language-ts"><pre><code><span class="token comment">/** a4纸的尺寸 */</span>\n<span class="token keyword">enum</span> <span class="token constant">A4_PAPER_SIZE_ENUM</span> <span class="token punctuation">{</span>\n  <span class="token string">&#39;width&#39;</span> <span class="token operator">=</span> <span class="token number">595.28</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;height&#39;</span> <span class="token operator">=</span> <span class="token number">841.89</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token function-variable function">generatePDF</span> <span class="token operator">=</span> <span class="token punctuation">(</span>canvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">,</span> filename<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> contentWidth <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width\n  <span class="token keyword">const</span> contentHeight <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height\n  <span class="token comment">// 一页pdf显示html页面生成的canvas高度</span>\n  <span class="token keyword">const</span> pageHeight <span class="token operator">=</span>\n    <span class="token punctuation">(</span>contentWidth <span class="token operator">/</span> <span class="token constant">A4_PAPER_SIZE_ENUM</span><span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token constant">A4_PAPER_SIZE_ENUM</span><span class="token punctuation">.</span>height\n  <span class="token comment">// 未生成pdf的html页面高度</span>\n  <span class="token keyword">let</span> leftHeight <span class="token operator">=</span> contentHeight\n  <span class="token comment">// 页面偏移</span>\n  <span class="token keyword">let</span> position <span class="token operator">=</span> <span class="token number">0</span>\n  <span class="token keyword">const</span> imgWidth <span class="token operator">=</span> <span class="token constant">A4_PAPER_SIZE_ENUM</span><span class="token punctuation">.</span>width\n  <span class="token keyword">const</span> imgHeight <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token constant">A4_PAPER_SIZE_ENUM</span><span class="token punctuation">.</span>width <span class="token operator">/</span> contentWidth<span class="token punctuation">)</span> <span class="token operator">*</span> contentHeight\n  <span class="token keyword">const</span> pageData <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">&#39;image/jpeg&#39;</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token constant">PDF</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsPDF</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a4&#39;</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 当内容未超过pdf一页显示的范围，无需分页</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>leftHeight <span class="token operator">&lt;</span> pageHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// addImage(pageData, &#39;JPEG&#39;, 左，上，宽度，高度)设置</span>\n    <span class="token constant">PDF</span><span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>pageData<span class="token punctuation">,</span> <span class="token string">&#39;JPEG&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> imgWidth<span class="token punctuation">,</span> imgHeight<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 超过一页时，分页打印（每页高度841.89）</span>\n    <span class="token keyword">while</span> <span class="token punctuation">(</span>leftHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token constant">PDF</span><span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>pageData<span class="token punctuation">,</span> <span class="token string">&#39;JPEG&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> position<span class="token punctuation">,</span> imgWidth<span class="token punctuation">,</span> imgHeight<span class="token punctuation">)</span>\n      leftHeight <span class="token operator">-=</span> pageHeight\n      position <span class="token operator">-=</span> <span class="token constant">A4_PAPER_SIZE_ENUM</span><span class="token punctuation">.</span>height\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>leftHeight <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">PDF</span><span class="token punctuation">.</span><span class="token function">addPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token constant">PDF</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filename <span class="token operator">+</span> <span class="token string">&#39;.pdf&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="解决-pdf-导出画面不清晰"><a class="header-anchor" href="#解决-pdf-导出画面不清晰" aria-hidden="true">#</a> 解决 pdf 导出画面不清晰</h3><p>html2canvas 的 scale 是用于控制渲染的比例，默认为浏览器的设备像素比即 window.devicePixelRatio。 如果导出 pdf 文档觉得模糊时，设置 html2canvas 的 scale 参数为<code>window.devicePixelRatio \\* 2</code>，对 canvas 进行等比放大，可以使 canvas 生成的图片更清晰，同时导出的文件大小也会同步增加。</p><h3 id="小瑕疵"><a class="header-anchor" href="#小瑕疵" aria-hidden="true">#</a> 小瑕疵</h3><p>这种方法有一点点小问题：分页的地方处理不太好，不会自动识别隔页处理，而只是比较粗暴的从中间被拆分，类似下面这张图。</p><p><img src="/blog/_assets/jsPdf-bug.be6b915e.png" alt="jsPdf-bug.png"></p><h2 id="总结"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>不管是工作还是学习中，都要有良好的“小记”习惯，将遇到的问题、解决的过程记录下来，最后整理成文，积累沉淀，不仅锻炼自己的文笔，同时拓宽知识面、帮助他人，在以后工作中遇到时也能更快的解决问题，实现业务需求；而不是做完就停滞了，下次遇到同样的问题还是处理不了。</p><p>以上就是本文的全部内容，希望这篇文章对你有所帮助，欢迎点赞和收藏 🙏，如果发现有什么错误或者更好的解决方案及建议，欢迎随时联系。</p>',32)];p.render=function(s,t,p,o,c,l){return n(),a("div",null,e)};export{t as __pageData,p as default};
