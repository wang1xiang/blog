import{f as n,g as s,J as a}from"./common-03e46d7f.js";const e='{"title":"我的mac使用之路","frontmatter":{"date":"2022-12-29","title":"我的mac使用之路","tags":["tool"],"describe":null},"headers":[{"level":2,"title":"到手检测","slug":"到手检测"},{"level":2,"title":"偏好设置","slug":"偏好设置"},{"level":2,"title":"安装软件","slug":"安装软件"},{"level":3,"title":"Homebrew","slug":"homebrew"},{"level":3,"title":"autojump","slug":"autojump"},{"level":3,"title":"iTerm2 主题设置","slug":"iterm2-主题设置"},{"level":2,"title":"系统快捷键","slug":"系统快捷键"},{"level":2,"title":"Google 浏览器","slug":"google-浏览器"},{"level":2,"title":"VSCode","slug":"vscode"},{"level":2,"title":"触摸板设置","slug":"触摸板设置"},{"level":2,"title":"更多手势","slug":"更多手势"},{"level":2,"title":"其他","slug":"其他"}],"relativePath":"docs/tool/mac.md","lastUpdated":1743653323769.1064}';var t={};const o=[a('<p>月初，由于陪伴我五年的神舟翻船了，很多朋友都让我换 mac，但我一直用着 windows，怕换了 mac 之后不习惯，考虑了很久还是换了。两个字总结：真香。</p><p>以下是我换 mac 之后的使用记录，做了笔记希望可以帮助其他人。</p><h2 id="到手检测"><a class="header-anchor" href="#到手检测" aria-hidden="true">#</a> 到手检测</h2><ol><li>边角有无磨损、磕碰</li><li>序列号 关于本机 外包装 序列号统一</li><li>电池循环次数 关于本机 系统报告</li><li>苹果官网 技术支持 apple 维修 查看保修<a href="https://checkcoverage.apple.com/cn/zh/" target="_blank" rel="noopener noreferrer">查看您的保障服务和支持期限 - Apple 支持</a></li><li>屏幕 <a href="https://screen.bmcx.com/#welcome" target="_blank" rel="noopener noreferrer">在线屏幕检测 - 显示器检测 - 显示器坏点检测工具 (screenbmcx.com)</a></li></ol><h2 id="偏好设置"><a class="header-anchor" href="#偏好设置" aria-hidden="true">#</a> 偏好设置</h2><ol><li>系统偏好设置-菜单栏-电池 显示</li><li>触控板设置 系统偏好-触控板-光标 跟踪速度最大 勾选上方选项</li><li>三指拖移 系统偏好-辅助功能-指针控制-触摸板选项-三指拖移</li><li>触发角 系统偏好-调度中心-触发角 桌面 调度中心 启动台 通知中心 鼠标滑倒左上角快速回到桌面</li><li>鼠标设置 系统偏好-鼠标-速度最高</li><li>finder 访达 我的电脑</li><li>启动台和程序坞 拖动常用软件到程序坞 启动隐藏</li><li>日期显示 系统偏好-程序坞菜单栏-时钟</li><li>隔空投送 仿达 隔空投送-所有人</li><li>下载设置 系统偏好-安全性-点按锁按钮 任何来源</li></ol><h2 id="安装软件"><a class="header-anchor" href="#安装软件" aria-hidden="true">#</a> 安装软件</h2><ul><li><p><a href="https://github.com/Homebrew" target="_blank" rel="noopener noreferrer">homebrew</a></p><p>mac 软件包</p></li><li><p><a href="https://github.com/yichengchen/clashX" target="_blank" rel="noopener noreferrer">clashX</a></p></li><li><p>vsCode、chrome</p><p>在 mac 中，可以通过<code>open</code>命令打开文件、目录或程序，可以在终端中输入<code>open</code></p><p><img src="/blog/_assets/opencode.ee8ba2fe.png" alt="opencode.png"></p><ul><li>open，直接使用关联的程序打开文件，如<code>open xxx.html</code>会直接使用谷歌浏览器打开</li><li>open -e，强制使用文本编辑程序打开文件</li><li>open -a，自行选择程序打开文件，例：<code>open -a &#39;Visual Studio Code &#39; .</code>，在 vscode 打开目录</li></ul><p>安装 vscode 后，在终端中可以直接通过<code>code .</code>在 vscode 中打开文件，其实就是调用 mac 的<code>open -a</code>命令打开文件</p><div class="language-bash"><pre><code><span class="token function">open</span> -a <span class="token string">&#39;Visual Studio Code&#39;</span>\n</code></pre></div></li><li><p>iShot pro 截图、录视频工具</p></li><li><p>Beyond Compare</p><p>最好用的对比工具</p></li><li><p>Paste</p><p>类似于 windows 的 window + v，可保存多条复制记录</p></li><li><p>BetterTouchTool</p></li><li><p><a href="https://www.keka.io/en/" target="_blank" rel="noopener noreferrer">keka</a></p></li><li><p><a href="https://lemon.qq.com/" target="_blank" rel="noopener noreferrer">柠檬清理</a></p></li><li><p><a href="https://www.u.tools/" target="_blank" rel="noopener noreferrer">utools</a></p></li><li><p>lightroom</p></li><li><p>photoshop</p></li><li><p>iTerm2 + onmyzsh</p><p>使用 iTerm2 替代自带的终端工具</p><ul><li><p>查看 shell 路径</p><div class="language-bash"><pre><code><span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span>\n</code></pre></div></li><li><p>查看系统自动哪些 shell</p><div class="language-bash"><pre><code><span class="token function">cat</span> /etc/shells\n</code></pre></div></li><li><p>切换到 zsh</p><div class="language-bash"><pre><code>chsh -s /bin/zsh\n<span class="token comment"># Mac如下</span>\n<span class="token comment"># 在 /etc/shells 文件中加入如下一行</span>\n/usr/local/bin/zsh\n<span class="token comment"># 接着运行</span>\nchsh -s /usr/local/bin/zsh\n</code></pre></div><ul><li>安装 iterms2 和 on-my-zsh</li></ul><p><a href="https://www.iterm2.com/downloads.html" target="_blank" rel="noopener noreferrer">https://www.iterm2.com/downloads.html</a></p><ul><li>安装 on-my-zsh</li></ul><div class="language-bash"><pre><code><span class="token comment"># 下载 oh-my-zsh 源码</span>\n<span class="token function">git</span> clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\n<span class="token comment"># 并且把 .zshrc 配置文件拷贝到根目录下</span>\n<span class="token function">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n<span class="token comment"># 让 .zshrc 配置文件生效</span>\n<span class="token builtin class-name">source</span> ~/.zshrc\n</code></pre></div><ul><li><p>查看 on-my-zsh 配置文件</p><div class="language-bash"><pre><code><span class="token function">vim</span> ~/.zshrc\n</code></pre></div><p>如果修改了配置文件，需要 source 使其生效</p><div class="language-bash"><pre><code><span class="token builtin class-name">source</span> ~/.zshrc\n</code></pre></div></li><li><p>查看配色列表</p><div class="language-bash"><pre><code><span class="token function">ls</span> ~/.oh-my-zsh/themes\n</code></pre></div></li><li><p>快捷键</p><div class="language-bash"><pre><code><span class="token comment"># 新建标签</span>\ncmd t\n<span class="token comment"># 删除标签</span>\ncmd w\n<span class="token comment"># 切换标签</span>\ncmd 数字/左右\n\n<span class="token comment"># 分屏</span>\ncmd <span class="token builtin class-name">shift</span> d\n\n<span class="token comment"># 查看历史命令</span>\ncmd <span class="token punctuation">;</span>\n<span class="token comment"># 到行首/行尾</span>\nControl a/e\n<span class="token comment"># 删除当前光标</span>\nControl d\n<span class="token comment"># 删除光标之前/之后</span>\nControl h/w\n<span class="token comment"># 删除当前行</span>\nControl u\n<span class="token comment"># 删除当前单词</span>\nControl w\n</code></pre></div></li><li><p>无权限问题</p></li></ul><p><img src="/blog/_assets/onmyzshError.ea9667f5.png" alt="image-20221214082911682"></p><p>解决方法</p><ul><li><p>修改文件权限</p><div class="language-bash"><pre><code><span class="token function">chmod</span> <span class="token number">755</span> /usr/local/share/zsh\n<span class="token function">chmod</span> <span class="token number">755</span> /usr/local/share/zsh/site-functions\n</code></pre></div></li><li><p>修改配置文件，根据提示加入 ZSH_DISABLE_COMPFIX=&quot;true&quot;，修改后 source 生效</p></li></ul></li></ul></li><li><p>QLMarkdown</p><p>在 mac 上可以直接通过选中文件按下空格预览文件，但只能预览一般的文件，如：image、text 等</p><p>QLMarkdown 是一个用于预览 Markdown 文件的 macOS Quick Look 扩展。 <a href="https://github.com/sbarex/QLMarkdown" target="_blank" rel="noopener noreferrer">github</a></p><ul><li><p>安装</p><div class="language-bash"><pre><code><span class="token comment"># 通过homebrew安装</span>\nbrew <span class="token function">install</span> qlmarkdown --cask\n</code></pre></div></li><li><p>等待安装完成后，选中 MarkDown 文件空格即可预览</p></li></ul></li></ul><h3 id="homebrew"><a class="header-anchor" href="#homebrew" aria-hidden="true">#</a> Homebrew</h3><h4 id="常用命令"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h4><div class="language-bash"><pre><code>brew search xxx               <span class="token comment">#搜索</span>\nbrew cask search xxx          <span class="token comment">#搜索</span>\nbrew <span class="token function">install</span> xxx              <span class="token comment">#安装，下载源码解压然后 ./configure &amp;&amp; make install ，同时会包含相关依存库。并自动配置好各种环境变量，而且易于卸载。</span>\nbrew cask <span class="token function">install</span> xxx         <span class="token comment">#安装桌面程序 安装的是已经编译好了的应用包 （.dmg/.pkg），只是下载解压，放在/opt/homebrew-cask/Caskroom</span>\nbrew list --versions          <span class="token comment">#查看安装过的包列表，同时显示版本号</span>\nbrew update                   <span class="token comment">#更新 brew</span>\nbrew upgrade <span class="token operator">&lt;</span>package_name<span class="token operator">&gt;</span>   <span class="token comment">#更新用brew安装的软件</span>\nbrew cleanup                  <span class="token comment">#清理旧版本的包缓存时，清除安装包</span>\nbrew cask cleanup             <span class="token comment">#清除安装包</span>\nbrew outdated                 <span class="token comment"># 显示可以升级的包</span>\nbrew uninstall <span class="token function">wget</span>\n</code></pre></div><h4 id="安装合集"><a class="header-anchor" href="#安装合集" aria-hidden="true">#</a> 安装合集</h4><div class="language-bash"><pre><code><span class="token comment"># 用 HomeBrew 安装 App</span>\nbrew <span class="token function">install</span> --cask <span class="token punctuation">\\</span>\n  1password <span class="token punctuation">\\</span>  <span class="token comment"># 密码管理工具</span>\n  alfred <span class="token punctuation">\\</span>     <span class="token comment"># mac效率神器，可以查看网上教程</span>\n  battery-buddy <span class="token punctuation">\\</span>   <span class="token comment"># 使电池变得可爱</span>\n  eagle <span class="token punctuation">\\</span>        <span class="token comment"># 轻松完成图片整理、分类</span>\n  google-chrome  <span class="token punctuation">\\</span> <span class="token comment"># 浏览器</span>\n  keycastr <span class="token punctuation">\\</span>        <span class="token comment"># 键盘敲击在屏幕上实时显示</span>\n  licecap <span class="token punctuation">\\</span>         <span class="token comment"># 录制生成gif图</span>\n\n<span class="token comment"># 安装 Cli 工具，以下是我的（以字母排序，方便你查找）</span>\nbrew <span class="token function">install</span> <span class="token punctuation">\\</span>\n  autojump <span class="token punctuation">\\</span>   <span class="token comment"># 快捷跳转工具</span>\n  bat <span class="token punctuation">\\</span>        <span class="token comment"># 代替cat查看文件的工具</span>\n  cloc <span class="token punctuation">\\</span>       <span class="token comment"># 代码统计工具</span>\n  cmatrix <span class="token punctuation">\\</span>    <span class="token comment"># 模拟黑客帝国，安装后输入cmatrix -a -s试试</span>\n  diff-so-fancy <span class="token punctuation">\\</span> <span class="token comment"># 代替git diff</span>\n  fd <span class="token punctuation">\\</span>            <span class="token comment"># 代替find fd index.html</span>\n  ffmpeg <span class="token punctuation">\\</span>\n  fzf <span class="token punctuation">\\</span>\n  gh <span class="token punctuation">\\</span>\n  <span class="token function">git</span> <span class="token punctuation">\\</span>\n  httpie <span class="token punctuation">\\</span>\n  hub <span class="token punctuation">\\</span>\n  hyperfine <span class="token punctuation">\\</span>\n  imagemagick <span class="token punctuation">\\</span>\n  jq <span class="token punctuation">\\</span>\n  lazygit <span class="token punctuation">\\</span>\n  mkcert <span class="token punctuation">\\</span>\n  nvm <span class="token punctuation">\\</span>\n  <span class="token function">pnpm</span> <span class="token punctuation">\\</span>\n  the_silver_searcher <span class="token punctuation">\\</span>\n  tig <span class="token punctuation">\\</span>\n  tldr <span class="token punctuation">\\</span>\n  tree <span class="token punctuation">\\</span>\n  ugit <span class="token punctuation">\\</span>\n  <span class="token function">wget</span>\n</code></pre></div><h3 id="autojump"><a class="header-anchor" href="#autojump" aria-hidden="true">#</a> autojump</h3><p>安装完成后添加到<code>~/.zshrc</code>的插件中</p><div class="language-bash"><pre><code><span class="token comment"># 查看autojump已经记录的目录</span>\nj -s\n<span class="token comment"># 跳转到目录</span>\nj xxx\n</code></pre></div><h3 id="iterm2-主题设置"><a class="header-anchor" href="#iterm2-主题设置" aria-hidden="true">#</a> iTerm2 主题设置</h3><ol><li><p>安装 PowerLine <a href="https://github.com/powerline/powerline" target="_blank" rel="noopener noreferrer">github</a></p><div class="language-bash"><pre><code><span class="token comment"># powerLine需要pip安装 pip是python的一个维护命令</span>\n<span class="token function">sudo</span> easy_install pip\n<span class="token function">sudo</span> pip <span class="token function">install</span> powerline-status --user\n<span class="token comment"># 如果上面命令无法安装 使用下面命令安装</span>\n<span class="token function">curl</span> https://bootstrap.pypa.io/get-pip.py <span class="token operator">|</span> python3\n</code></pre></div></li><li><p>安装 PowerFonts</p><p>创建一个目录用来保存 github 的代码，如～/Desktop/github</p><div class="language-bash"><pre><code><span class="token function">git</span> clone https://github.com/powerline/fonts.git --depth<span class="token operator">=</span><span class="token number">1</span>\n<span class="token builtin class-name">cd</span> fonts\n\n./install.sh\n</code></pre></div><p>执行完成后，进入<code>Settings -&gt; Profiles -&gt; Text -&gt; Font</code>选择<code>Meslo LG S for Powerline</code>字体即可</p></li><li><p>安装配色方案(看个人爱好)</p><div class="language-bash"><pre><code><span class="token comment"># 在刚刚的github目录</span>\n<span class="token function">git</span> clone https://github.com/altercation/solarized\n<span class="token builtin class-name">cd</span> solarized/iterm2-colors-solarized/\n\n<span class="token comment"># 打开当前目录</span>\n<span class="token function">open</span> <span class="token builtin class-name">.</span>\n</code></pre></div><p>在打开的 finder 窗口中，双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 安装配色 安装完成后，进入<code>Settings -&gt; Profiles -&gt; Colors -&gt; Color Presets</code>选择新添加的配色</p></li><li><p>安装 agnoster 主题</p><div class="language-bash"><pre><code><span class="token function">git</span> clone https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor.git\n<span class="token builtin class-name">cd</span> oh-my-zsh-agnoster-fcamblor/\n./install\n</code></pre></div><p>安装完成后，编辑配置文件</p><div class="language-bash"><pre><code><span class="token function">vim</span> ~/.zshrc\n<span class="token comment"># 修改`ZSH-THEME`为`agnoster`</span>\n<span class="token builtin class-name">source</span> ~/.zshrc\n</code></pre></div></li><li><p>安装高亮和命令补全插件</p><div class="language-bash"><pre><code><span class="token builtin class-name">cd</span> ~/.oh-my-zsh/custom/plugins/\n<span class="token comment"># 高亮插件</span>\n<span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git\n</code></pre></div><div class="language-bash"><pre><code><span class="token comment"># 优化文件路径显示</span>\n<span class="token function">vim</span> ~/.oh-my-zsh/themes/agnoster.zsh-theme\n<span class="token comment"># 修改%～ 为 %1d</span>\n<span class="token comment"># Dir: current working directory</span>\n<span class="token function-name function">prompt_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">#prompt_segment blue $CURRENT_FG &#39;%~&#39;</span>\n  prompt_segment blue <span class="token variable">$CURRENT_FG</span> <span class="token string">&#39;%1d&#39;</span>\n<span class="token punctuation">}</span>\n<span class="token comment"># 隐藏用户名信息</span>\n<span class="token comment"># Context: user@hostname (who am I and where am I)</span>\n<span class="token function-name function">prompt_context</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token environment constant">$USER</span>&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;<span class="token variable">$DEFAULT_USER</span>&quot;</span> <span class="token operator">||</span> -n <span class="token string">&quot;<span class="token variable">$SSH_CLIENT</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>\n  <span class="token comment"># prompt_segment black default &quot;%(!.%{%F{yellow}%}.)%n@%m&quot;</span>\n</code></pre></div><div class="language-bash"><pre><code><span class="token comment"># 命令补全</span>\n<span class="token function">git</span> clone https://github.com/zsh-users/zsh-autosuggestions\n<span class="token comment"># 此时提示颜色与背景色相同，需要改一下</span>\n<span class="token function">vim</span> zsh-autosuggestions.zsh\n</code></pre></div><div class="language-bash"><pre><code><span class="token comment"># 搜索fg=8 改为fg=10</span>\n<span class="token builtin class-name">typeset</span> -g <span class="token assign-left variable">ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE</span><span class="token operator">=</span><span class="token string">&#39;fg=10&#39;</span>\n</code></pre></div><div class="language-bash"><pre><code><span class="token comment"># 编辑zshrc文件</span>\n<span class="token function">vim</span> ~/.zshrc\n</code></pre></div><div class="language-bash"><pre><code><span class="token comment"># 搜索plugins，添加 zsh-autosuggestions和zsh-syntax-highlighting</span>\n<span class="token assign-left variable">plugins</span><span class="token operator">=</span><span class="token punctuation">(</span>\n <span class="token function">git</span>\n zsh-autosuggestions\n zsh-syntax-highlighting\n<span class="token punctuation">)</span>\n</code></pre></div></li><li><p>全部执行完毕后，<code>cmd q</code>退出 iTerm2，重新打开</p></li></ol><h2 id="系统快捷键"><a class="header-anchor" href="#系统快捷键" aria-hidden="true">#</a> 系统快捷键</h2><ul><li>复制文件：按住 option 拖动文件即可复制</li><li>剪切：cmd + c 复制成功后 再使用 cmd+option+v 进行剪切</li><li>预览：选中文件 按空格键 或 全选后按组合 option+空格</li><li>聚焦搜索：cmd + 空格 搜索文件后 按住 cmd 键可以直达文件路劲</li><li>切换中英文：大写锁定键</li><li>打开表情：ctrl+cmd+空格</li><li>切换声调：tab 输入拼音后切换声调</li><li>菜单栏改变位置：按住 cmd</li><li>退出应用：cmd+q</li><li>重命名：选中后回车</li><li>回退/前进：cmd+z/shift+cmd+z</li><li>移动光标（单词）：shift+options+&lt;/&gt;</li><li>移动光标（当前行前面/后面）：shift+cmd+&lt;/&gt;</li><li>类似于三指左右切换窗口：ctrl+&lt;/&gt;</li><li>最大化最小化窗口：cmd+ctrl+f</li><li>左右切换：option+cmd+&lt;/&gt;</li><li>切换对应标签页：cmd+1/2/3</li><li>窗口最小化：cmd+m</li><li>切换应用：cmd+tab</li><li>强制关闭应用 ：option+cmd+esc</li><li>查看 ip 等：option+wifit 图标</li><li>拖动 dock 栏位置 ：按住 option</li></ul><h2 id="google-浏览器"><a class="header-anchor" href="#google-浏览器" aria-hidden="true">#</a> Google 浏览器</h2><ul><li><p>调试</p><p>跳过 cmd + \\</p><p>下一步 cmd + &#39;</p><p>进入 cmd + ;</p></li><li><p>打开下载管理 shift + cmd + j</p></li></ul><h2 id="vscode"><a class="header-anchor" href="#vscode" aria-hidden="true">#</a> VSCode</h2><ul><li>打开用户设置：cmd + ,</li><li>打开新的 vscode：cmd + shift + n</li><li>切换项目：cmd + r</li><li>跳到某一行：ctrl + g</li><li>搜索文件并打开：ctrl + p</li><li>选中匹配项（一个一个选）：cmd + d</li><li>选中所有匹配项（全选）：cmd + shift + l</li><li>格式化代码：option + shift + f</li><li>搜索：cmd + f</li><li>全局搜索：shift + cmd + f</li><li>替换：cmd + h</li><li>全局替换：shift + cmd + h</li><li>在当前行新增：shift + cmd + enter</li><li>复制上下行：shift + option + 上/下</li><li>回退/前进：cmd + z / shift + cmd + z</li><li>代码折叠/打开：option + cmd + [/]</li></ul><h2 id="触摸板设置"><a class="header-anchor" href="#触摸板设置" aria-hidden="true">#</a> 触摸板设置</h2><ul><li>光标变大：来回移动手指</li><li>双指点击：右键/ctrl+单击</li><li>双指从触摸板边缘向左滑动：通知中心</li><li>双指旋转：改变图片方向</li><li>三指左右切换全屏窗口</li><li>三指向上 应用中心</li><li>四指向内 启动台</li><li>四指向外 桌面</li></ul><h2 id="更多手势"><a class="header-anchor" href="#更多手势" aria-hidden="true">#</a> 更多手势</h2><p>安装 BetterTouchTool</p><p><img src="/blog/_assets/betterTouchTool.c34fd843.jpg" alt="betterTouchTool.jpg"></p><p>添加触发器：</p><ul><li>单指轻点顶部中心：cmd + r 刷新浏览器</li><li>单指轻点左侧/右侧中心：options + cmd + &lt;/&gt; 在页签之间切换</li><li>单指轻点右上角：cmd + t 打开新页签</li><li>指尖轻点左侧：cmd + w 关闭页签</li><li>指尖轻点右侧：shift + cmd + t 打开刚刚关闭的页签</li><li>三指轻点：ctrl + cmd + f 全屏/取消全屏</li><li>四指轻点：enter 确定</li></ul><h2 id="其他"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><ul><li>修改 hosts 文件</li></ul><p>终端中输入</p><div class="language-bash"><pre><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/hosts\n</code></pre></div>',35)];t.render=function(a,e,t,l,p,c){return n(),s("div",null,o)};export{e as __pageData,t as default};
