import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"uniapp学习笔记","frontmatter":{"date":"2024-08-01","title":"uniapp学习笔记","tags":["wechat"],"describe":"uniapp学习笔记"},"headers":[{"level":2,"title":"创建项目","slug":"创建项目"},{"level":3,"title":"Hbuildx 创建","slug":"hbuildx-创建"},{"level":3,"title":"命令行创建","slug":"命令行创建"},{"level":2,"title":"VSCode 开发","slug":"vscode-开发"},{"level":3,"title":"插件","slug":"插件"},{"level":3,"title":"ts 类型校验","slug":"ts-类型校验"},{"level":2,"title":"开发准备","slug":"开发准备"},{"level":3,"title":"组件库","slug":"组件库"},{"level":3,"title":"pinia 持久化","slug":"pinia-持久化"},{"level":3,"title":"请求工具","slug":"请求工具"},{"level":2,"title":"首页","slug":"首页"},{"level":3,"title":"安全区域设置","slug":"安全区域设置"},{"level":3,"title":"自定义组件自动引入","slug":"自定义组件自动引入"},{"level":3,"title":"开发","slug":"开发"},{"level":3,"title":"自定义 tabBar","slug":"自定义-tabbar"},{"level":3,"title":"骨架屏","slug":"骨架屏"},{"level":3,"title":"页面参数","slug":"页面参数"},{"level":3,"title":"动态设置标题","slug":"动态设置标题"},{"level":3,"title":"添加编译模式","slug":"添加编译模式"},{"level":2,"title":"小程序快捷登录","slug":"小程序快捷登录"},{"level":2,"title":"页面分包和预加载","slug":"页面分包和预加载"}],"relativePath":"docs/wechat/uniapp-start.md","lastUpdated":1742205571784.0415}';var p={};const o=[a('<h2 id="创建项目"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h2><h3 id="hbuildx-创建"><a class="header-anchor" href="#hbuildx-创建" aria-hidden="true">#</a> Hbuildx 创建</h3><h3 id="命令行创建"><a class="header-anchor" href="#命令行创建" aria-hidden="true">#</a> 命令行创建</h3><p><a href="https://uniapp.dcloud.net.cn/quickstart-cli.html" target="_blank" rel="noopener noreferrer">quickstart</a></p><ol><li><p>创建项目</p><div class="language-bash"><pre><code>npx degit dcloudio/uni-preset-vue<span class="token comment">#vite-ts uniapp-vue3-ts</span>\n</code></pre></div></li><li><p>通过 vscode 打开</p><div class="language-bash"><pre><code><span class="token function">pnpm</span> i\n<span class="token comment"># 运行微信项目</span>\n<span class="token function">pnpm</span> run dev:mp-weixin\n</code></pre></div><p>完成后，会生成 dist/dev/mp-weixin 目录</p></li><li><p>微信开发者工具导入项目</p></li></ol><h2 id="vscode-开发"><a class="header-anchor" href="#vscode-开发" aria-hidden="true">#</a> VSCode 开发</h2><h3 id="插件"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h3><ul><li>uni-helper</li><li>uni-create-view</li><li>uniapp 小程序扩展</li></ul><h3 id="ts-类型校验"><a class="header-anchor" href="#ts-类型校验" aria-hidden="true">#</a> ts 类型校验</h3><ol><li>安装类型声明文件</li><li>配置 tsconfig.json</li></ol><div class="language-bash"><pre><code><span class="token function">pnpm</span> i @types/wechat-miniprogram @uni-helper/uni-app-types -D\n</code></pre></div><div class="language-js"><pre><code><span class="token comment">// tsconfig.json配置</span>\n<span class="token punctuation">{</span>\n  <span class="token string-property property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@vue/tsconfig/tsconfig.json&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&quot;allowJs&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">&quot;@/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/*&quot;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dom&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@dcloudio/types&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;miniprogram-api-typings&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;@uni-helper/uni-app-types&quot;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;vueCompilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// experimentalRuntimeMode 已废弃，现调整为 nativeTags，请升级 Volar 插件至最新版本</span>\n    <span class="token string-property property">&quot;nativeTags&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;block&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;template&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;slot&quot;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/**/*.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;src/**/*.d.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;src/**/*.tsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;src/**/*.vue&quot;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="开发准备"><a class="header-anchor" href="#开发准备" aria-hidden="true">#</a> 开发准备</h2><h3 id="组件库"><a class="header-anchor" href="#组件库" aria-hidden="true">#</a> 组件库</h3><p><a href="https://uniapp.dcloud.net.cn/component/uniui/quickstart.html" target="_blank" rel="noopener noreferrer">uni-ui</a></p><h4 id="配置-easycom-自动导入"><a class="header-anchor" href="#配置-easycom-自动导入" aria-hidden="true">#</a> 配置 easycom 自动导入</h4><div class="language-json"><pre><code><span class="token comment">// uni-app 3.0.0+ 版本支持，自动注册组件</span>\n<span class="token comment">// 详细配置参考：https://uniapp.dcloud.net.cn/uniCloud/uni-config-center?id=easycom</span>\n<span class="token property">&quot;easycom&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 是否开启自动扫描</span>\n  <span class="token property">&quot;autoscan&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 以正则方式完成组件的自动导入</span>\n  <span class="token property">&quot;custom&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// uni-ui 规则如下配置 uni-badge会自动替换为@dcloudio/uni-ui/lib/uni-badge/uni-badge.vue</span>\n    <span class="token property">&quot;^uni-(.*)&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@dcloudio/uni-ui/lib/uni-$1/uni-$1.vue&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div><h4 id="uni-ui-ts-类型说明"><a class="header-anchor" href="#uni-ui-ts-类型说明" aria-hidden="true">#</a> uni-ui ts 类型说明</h4><p><a href="https://www.npmjs.com/package/@uni-helper/uni-ui-types" target="_blank" rel="noopener noreferrer">uni-ui-types</a></p><h3 id="pinia-持久化"><a class="header-anchor" href="#pinia-持久化" aria-hidden="true">#</a> pinia 持久化</h3><p><a href="https://prazdevs.github.io/pinia-plugin-persistedstate/zh/guide/" target="_blank" rel="noopener noreferrer">pinia-plugin-persistedstate</a></p><div class="language-js"><pre><code><span class="token comment">// 小程序持久化</span>\n<span class="token punctuation">{</span>\n  <span class="token literal-property property">persist</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">storage</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token function">getItem</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> uni<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token function">setItem</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div><p><a href="https://prazdevs.github.io/pinia-plugin-persistedstate/zh/guide/config.html#storage" target="_blank" rel="noopener noreferrer">storage</a></p><h3 id="请求工具"><a class="header-anchor" href="#请求工具" aria-hidden="true">#</a> 请求工具</h3><p><a href="https://uniapp.dcloud.net.cn/api/request/request.html#request" target="_blank" rel="noopener noreferrer">uni.request</a></p><p><a href="https://uniapp.dcloud.net.cn/api/interceptor.html#addinterceptor" target="_blank" rel="noopener noreferrer">addinterceptor 配置请求拦截器</a></p><div class="language-js"><pre><code><span class="token comment">/**\n * 添加请求拦截器\n */</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useMemberStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores&#39;</span>\n\n<span class="token keyword">const</span> baseURL <span class="token operator">=</span> <span class="token string">&#39;https://pcapi-xiaotuxian-front-devtest.itheima.net/&#39;</span>\n\n<span class="token comment">// 添加拦截器</span>\n<span class="token keyword">const</span> httpInterceptor <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 拦截前触发</span>\n  <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">options</span><span class="token operator">:</span> UniApp<span class="token punctuation">.</span>RequestOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 请求地址拼接</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      options<span class="token punctuation">.</span>url <span class="token operator">=</span> baseURL <span class="token operator">+</span> options<span class="token punctuation">.</span>url\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 超时时间</span>\n    options<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">20000</span>\n    <span class="token comment">// 添加小程序请求头</span>\n    options<span class="token punctuation">.</span>header <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token operator">...</span>options<span class="token punctuation">.</span>header<span class="token punctuation">,</span>\n      <span class="token string-property property">&#39;source-client&#39;</span><span class="token operator">:</span> <span class="token string">&#39;miniapp&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 添加token请求头</span>\n    <span class="token keyword">const</span> memberStore <span class="token operator">=</span> <span class="token function">useMemberStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> token <span class="token operator">=</span> memberStore<span class="token punctuation">.</span>profile<span class="token operator">?.</span>token\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      options<span class="token punctuation">.</span>header<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> token\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\nuni<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> httpInterceptor<span class="token punctuation">)</span>\nuni<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token string">&#39;uploadFile&#39;</span><span class="token punctuation">,</span> httpInterceptor<span class="token punctuation">)</span>\n</code></pre></div><h4 id="封装成-promise"><a class="header-anchor" href="#封装成-promise" aria-hidden="true">#</a> 封装成 promise</h4><div class="language-js"><pre><code>type Data<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">code</span><span class="token operator">:</span> string\n  <span class="token literal-property property">msg</span><span class="token operator">:</span> string\n  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token constant">T</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">enum</span> StatusCodeEnum <span class="token punctuation">{</span>\n  <span class="token constant">SUCCESS</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span>\n  <span class="token constant">REJECT</span> <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">,</span>\n  <span class="token constant">UNAUTHORIZED</span> <span class="token operator">=</span> <span class="token number">401</span><span class="token punctuation">,</span>\n  <span class="token constant">INTERNAL_SERVER_ERROR</span> <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">options</span><span class="token operator">:</span> UniApp<span class="token punctuation">.</span>RequestOptions</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>Data<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token operator">...</span>options<span class="token punctuation">,</span>\n      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode <span class="token operator">&gt;=</span> StatusCodeEnum<span class="token punctuation">.</span><span class="token constant">SUCCESS</span> <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>statusCode <span class="token operator">&lt;</span> StatusCodeEnum<span class="token punctuation">.</span><span class="token constant">REJECT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data <span class="token keyword">as</span> Data<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> StatusCodeEnum<span class="token punctuation">.</span><span class="token constant">UNAUTHORIZED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 清空用户信息 跳转登录页</span>\n          uni<span class="token punctuation">.</span><span class="token function">clearStorageSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          uni<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/pages/login/login&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data <span class="token keyword">as</span> Data<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>msg <span class="token operator">||</span> <span class="token string">&#39;请求错误&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;请求错误&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="首页"><a class="header-anchor" href="#首页" aria-hidden="true">#</a> 首页</h2><h3 id="安全区域设置"><a class="header-anchor" href="#安全区域设置" aria-hidden="true">#</a> 安全区域设置</h3><div class="language-js"><pre><code><span class="token comment">// 获取屏幕边界到安全区域距离</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> safeAreaInsets <span class="token punctuation">}</span> <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getSystemInfoSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p>设置顶部安全距离</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ paddingTop: safeAreaInsets!.top + 10 + <span class="token punctuation">&#39;</span>px<span class="token punctuation">&#39;</span> }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="自定义组件自动引入"><a class="header-anchor" href="#自定义组件自动引入" aria-hidden="true">#</a> 自定义组件自动引入</h3><p>同上 easycom 自动导入</p><div class="language-json"><pre><code><span class="token comment">// 以 Xtx 开头的组件，在 components 文件夹中查找引入（需要重启服务器）</span>\n<span class="token property">&quot;^Xtx(.*)&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@/components/Xtx$1.vue&quot;</span>\n</code></pre></div><p>修改后需要重启项目生效</p><h4 id="添加组件类型声明"><a class="header-anchor" href="#添加组件类型声明" aria-hidden="true">#</a> 添加组件类型声明</h4><p>自动导入的组件缺少类型声明，需要 types 下新建 components.d.ts</p><div class="language-ts"><pre><code><span class="token keyword">import</span> XtxSwiper <span class="token keyword">from</span> <span class="token string">&#39;@/components/XtxSwiper.vue&#39;</span>\n<span class="token keyword">import</span> XtxGuess <span class="token keyword">from</span> <span class="token string">&#39;@/components/XtxGuess.vue&#39;</span>\n\n<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;vue&#39;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">GlobalComponents</span> <span class="token punctuation">{</span>\n    XtxSwiper<span class="token operator">:</span> <span class="token keyword">typeof</span> XtxSwiper\n    XtxGuess<span class="token operator">:</span> <span class="token keyword">typeof</span> XtxGuess\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 组件实例类型</span>\n<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">XtxGuessInstance</span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> XtxGuess<span class="token operator">&gt;</span>\n<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">XtxSwiperInstance</span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> XtxSwiper<span class="token operator">&gt;</span>\n</code></pre></div><p>这样其他组件引入就不会报错</p><h3 id="开发"><a class="header-anchor" href="#开发" aria-hidden="true">#</a> 开发</h3><h3 id="自定义-tabbar"><a class="header-anchor" href="#自定义-tabbar" aria-hidden="true">#</a> 自定义 tabBar</h3><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/index/index&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;style&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;navigationBarTitleText&quot;</span><span class="token operator">:</span> <span class="token string">&quot;首页&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;navigationStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;navigationBarTextStyle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;white&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div><h3 id="骨架屏"><a class="header-anchor" href="#骨架屏" aria-hidden="true">#</a> 骨架屏</h3><p>微信开发者工具 -&gt; 信息 -&gt; 生成骨架屏</p><p><img src="/blog/_assets/skeleton.4d98e0d6.png" alt="skeleton"></p><p>复制代码到 vue 中稍作修改即可</p><h3 id="页面参数"><a class="header-anchor" href="#页面参数" aria-hidden="true">#</a> 页面参数</h3><div class="language-js"><pre><code><span class="token comment">// uniapp 获取页面参数</span>\n<span class="token keyword">const</span> query <span class="token operator">=</span> defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">type</span><span class="token operator">:</span> string\n<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p>获取页面参数，例如 路由传参</p><h3 id="动态设置标题"><a class="header-anchor" href="#动态设置标题" aria-hidden="true">#</a> 动态设置标题</h3><div class="language-js"><pre><code><span class="token comment">// 动态设置标题</span>\nuni<span class="token punctuation">.</span><span class="token function">setNavigationBarTitle</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> xxx <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="添加编译模式"><a class="header-anchor" href="#添加编译模式" aria-hidden="true">#</a> 添加编译模式</h3><p><img src="/blog/_assets/compile-mode.a1a3f8da.png" alt="compile-mode"></p><p>可以每次打开固定路由</p><h2 id="小程序快捷登录"><a class="header-anchor" href="#小程序快捷登录" aria-hidden="true">#</a> 小程序快捷登录</h2><div class="language-js"><pre><code>wx<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p>获取微信登录信息</p><div class="language-js"><pre><code><span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;button phone&quot;</span> open<span class="token operator">-</span>type<span class="token operator">=</span><span class="token string">&quot;getPhoneNumber&quot;</span> @getphonenumber<span class="token operator">=</span><span class="token string">&quot;onGetphonenumber&quot;</span><span class="token operator">&gt;</span>\n  <span class="token operator">&lt;</span>text <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;icon icon-phone&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>text<span class="token operator">&gt;</span>\n  手机号快捷登录\n<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n\n<span class="token comment">// 获取用户手机号码</span>\n<span class="token keyword">const</span> <span class="token literal-property property">onGetphonenumber</span><span class="token operator">:</span> UniHelper<span class="token punctuation">.</span><span class="token function-variable function">ButtonOnGetphonenumber</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> encryptedData<span class="token punctuation">,</span> iv <span class="token punctuation">}</span> <span class="token operator">=</span> ev<span class="token punctuation">.</span>detail\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">postLoginWxMinAPI</span><span class="token punctuation">(</span><span class="token punctuation">{</span> code<span class="token punctuation">,</span> encryptedData<span class="token punctuation">,</span> iv <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token function">loginSuccess</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>result<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>获取登录用户手机号（个人微信小程序账号无法获取）</p><h2 id="页面分包和预加载"><a class="header-anchor" href="#页面分包和预加载" aria-hidden="true">#</a> 页面分包和预加载</h2><p>通过分包将不经常使用的页面进行拆分，以提高小程序的启动速度。</p><p>点击才开始加载，此时就需要对分包进行预加载</p>',65)];p.render=function(a,t,p,e,c,l){return n(),s("div",null,o)};export{t as __pageData,p as default};
