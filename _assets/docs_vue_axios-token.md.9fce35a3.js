import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"axios添加token","frontmatter":{"date":"2020-08-16","title":"axios添加token","tags":["vue"],"describe":"vue按需引入antd组件过程记录"},"headers":[{"level":2,"title":"axios获取请求token并添加在请求header中","slug":"axios获取请求token并添加在请求header中"},{"level":2,"title":"判断返回结果并跳转到登录页","slug":"判断返回结果并跳转到登录页"}],"relativePath":"docs/vue/axios-token.md","lastUpdated":1743134641254.3171}';var p={};const o=[a('<h2 id="axios获取请求token并添加在请求header中"><a class="header-anchor" href="#axios获取请求token并添加在请求header中" aria-hidden="true">#</a> axios获取请求token并添加在请求header中</h2><div class="language-js"><pre><code>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>\n  <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>token <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;ACCESS_TOKEN&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">return</span> config<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre></div><h2 id="判断返回结果并跳转到登录页"><a class="header-anchor" href="#判断返回结果并跳转到登录页" aria-hidden="true">#</a> 判断返回结果并跳转到登录页</h2><div class="language-js"><pre><code>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>\n  <span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message <span class="token operator">===</span> <span class="token string">&#39;请登录&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      notification<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        key<span class="token punctuation">,</span>\n        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;错误&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;登陆已过期，请重新登陆&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;Logout&#39;</span><span class="token punctuation">)</span>\n        route<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// 跳转到登录页面</span>\n          <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span>\n          <span class="token comment">// query: {redirect: router.currentRoute.fullPath, gameId: store.state.gameId} // 将跳转的路由path作为参数，登录成功后跳转到该路由</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> response\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre></div>',4)];p.render=function(a,t,p,e,c,u){return n(),s("div",null,o)};export{t as __pageData,p as default};
