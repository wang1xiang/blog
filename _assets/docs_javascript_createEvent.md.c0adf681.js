import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"使用createEvent和dispatchEvent模拟事件","frontmatter":{"date":"2023-01-04","title":"使用createEvent和dispatchEvent模拟事件","tags":["javascript"],"describe":"createEvent配合dispatchEvent使用"},"headers":[{"level":3,"title":"事件 Event","slug":"事件-event"},{"level":3,"title":"Document.createEvent()","slug":"document-createevent"},{"level":3,"title":"步骤","slug":"步骤"}],"relativePath":"docs/javascript/createEvent.md","lastUpdated":1742176930023.5972}';var e={};const p=[a('<h3 id="事件-event"><a class="header-anchor" href="#事件-event" aria-hidden="true">#</a> 事件 Event</h3><p>一般来说事件都是由用户触发，如鼠标、键盘事件，JavaScript 中通过<code>addEventListener</code>来绑定事件被触发相应的函数</p><h3 id="document-createevent"><a class="header-anchor" href="#document-createevent" aria-hidden="true">#</a> Document.createEvent()</h3><p>可以通过<code>createEvent</code>来创建一个指定类型事件，然后通过<code>dispatchEvent</code>来触发它，从而达到模拟事件触发的目的，比如模拟一个屏幕大小变化的过程，代码如下</p><div class="language-js"><pre><code><span class="token comment">// 创建UIEvents类型事件</span>\n<span class="token keyword">const</span> evt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&quot;UIEvents&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 定义事件名称resize</span>\nevt<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">&quot;resize&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> window<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 触发</span>\nwindow<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span>evt<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>接着可以通过<code>addEventListener</code>来监听</p><div class="language-js"><pre><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>\n  <span class="token string">&quot;resize&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;触发resize&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token boolean">false</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>模拟鼠标点击事件</p><div class="language-js"><pre><code><span class="token keyword">const</span> evt1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&quot;MouseEvents&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nevt1<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nwindow<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>evt1<span class="token punctuation">)</span><span class="token punctuation">;</span>\nwindow<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="步骤"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3><ol><li><p><code>document.createEvent(Event type)</code>接收一个 Event type 字符串来创建对应的事件</p><ul><li>UIEvents UI 事件</li><li>MouseEvents 鼠标事件</li><li>MutationEvents DOM 变动事件</li><li>HTMLEvents HTML 事件</li></ul></li><li><p>创建 event 对象后，需要调用对应的<code>initEvent</code>进行初始化</p><div class="language-js"><pre><code><span class="token comment">// type 定义事件类型的字符串</span>\n<span class="token comment">// canBubble 是否冒泡</span>\n<span class="token comment">// cancelable 是否可以用preventDefault()取消事件</span>\n<span class="token comment">// view window对象</span>\n<span class="token comment">// detail 有关事件的详细信息</span>\n<span class="token function">initUIEvent</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> canBubble<span class="token punctuation">,</span> cancelable<span class="token punctuation">,</span> view<span class="token punctuation">,</span> detail<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div></li><li><p>通过<code>window.dispatch(event)</code>触发自定义事件</p></li></ol>',11)];e.render=function(a,t,e,o,c,u){return n(),s("div",null,p)};export{t as __pageData,e as default};
