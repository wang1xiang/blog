import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"使用axios请求，返回long类型数字精度丢失问题处理","frontmatter":{"date":"2024-01-02","title":"使用axios请求，返回long类型数字精度丢失问题处理","tags":["work"],"describe":"使用axios请求，返回long类型数字精度丢失问题处理"},"headers":[{"level":2,"title":"问题描述","slug":"问题描述"},{"level":2,"title":"问题原因","slug":"问题原因"},{"level":2,"title":"解决方案","slug":"解决方案"}],"relativePath":"docs/work/js-long.md","lastUpdated":1742891325217.531}';var p={};const o=[a('<h2 id="问题描述"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> 问题描述</h2><p>服务器后端返回 Long 类型的字段（如 id），传到前端会出现精度丢失，如：<code>164379764419858435</code>，前端会变成 <code>164379764419858000</code>。导致 id 匹配出问题</p><h2 id="问题原因"><a class="header-anchor" href="#问题原因" aria-hidden="true">#</a> 问题原因</h2><p>在 JavaScript 中，JSON.parse() 函数用于将一个 JSON 字符串转换为 JavaScript 对象。但是，如果 JSON 字符串中包含的数字太长，超出了 JavaScript 安全数字范围（即小于 <code>-(2^53 - 1) 和 大于(2^53 - 1)）</code>，那么 JSON.parse() 可能会导致精度丢失，从而解析出不正确的数字</p><h2 id="解决方案"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h2><ol><li><p>手动替换，把大数替换成字符串</p><div class="language-js"><pre><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;{&quot;a&quot;: 1234567890123456789}&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">k<span class="token punctuation">,</span> v<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> \t<span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>source <span class="token operator">&gt;</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span><span class="token punctuation">)</span> <span class="token keyword">return</span> o<span class="token punctuation">.</span>source\n    <span class="token keyword">else</span> <span class="token keyword">return</span> v\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div></li><li><p>使用第三方库 json-bigint</p><div class="language-js"><pre><code><span class="token keyword">import</span> JSONBig <span class="token keyword">from</span> <span class="token string">&#39;json-bigint&#39;</span>\n<span class="token comment">//创建一个axios实例</span>\n<span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// withCredentials: true,</span>\n  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token comment">//5秒</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 处理返回数据</span>\ninstance<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>transformResponse <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> JSONBig<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span>\n</code></pre></div></li></ol>',6)];p.render=function(a,t,p,e,c,l){return n(),s("div",null,o)};export{t as __pageData,p as default};
