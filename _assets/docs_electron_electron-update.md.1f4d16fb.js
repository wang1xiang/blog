import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"Electron Forge 自动更新","frontmatter":{"date":"2023-12-14","title":"Electron Forge 自动更新","tags":["electron"],"describe":"Electron Forge 自动更新"},"headers":[{"level":2,"title":"打包方案","slug":"打包方案"},{"level":2,"title":"详细配置","slug":"详细配置"},{"level":3,"title":"@electron-forge/maker-dmg","slug":"electron-forge-maker-dmg"},{"level":3,"title":"@felixrieseberg/electron-forge-maker-nsis for exe","slug":"felixrieseberg-electron-forge-maker-nsis-for-exe"},{"level":2,"title":"MAC 签名与公证","slug":"mac-签名与公证"},{"level":3,"title":"签名","slug":"签名"},{"level":3,"title":"公证","slug":"公证"},{"level":2,"title":"自动更新","slug":"自动更新"},{"level":3,"title":"MAC 自更新依赖@electron-forge/maker-zip","slug":"mac-自更新依赖-electron-forge-maker-zip"},{"level":3,"title":"WIN 自更新依赖 electron-updater 隶属于 electron-builder","slug":"win-自更新依赖-electron-updater-隶属于-electron-builder"},{"level":2,"title":"Todo","slug":"todo"}],"relativePath":"docs/electron/electron-update.md","lastUpdated":1742378302406.604}';var p={};const o=[a('<h2 id="打包方案"><a class="header-anchor" href="#打包方案" aria-hidden="true">#</a> 打包方案</h2><ul><li><p>MAC: @electron-forge/maker-dmg DMG 包供用户安装</p></li><li><p>WINDOWS</p><ul><li>@electron-forge/maker-squirrel 框架默认，但它安装时不能选安装路径</li><li>@electron-forge/maker-wix 官方推荐之一，打出 MSI 镜像包。<strong>最大的坑就在这里，它的自动更新几乎不可用，issues 也没人回复</strong>，白白花费了很多时间</li><li>@felixrieseberg/electron-forge-maker-nsis 最后还是换回了 electron-builder 的 NSIS 方案</li></ul></li></ul><h2 id="详细配置"><a class="header-anchor" href="#详细配置" aria-hidden="true">#</a> 详细配置</h2><div class="language-js"><pre><code><span class="token comment">// forge.config.ts</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">packagerConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;APP_NAME&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 不加扩展名，MAC 会自动查找 .icns、WIN 使用 .ico</span>\n    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;./icon/icon&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 最终包不使用的代码，不要打入 asar</span>\n    <span class="token literal-property property">ignore</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.yarn</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">src\\/render</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">appBundleId</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">com.xxx.xxx</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token literal-property property">appCopyright</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Copyright © 2023 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>packageJson<span class="token punctuation">.</span>author<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>packageJson 中的 dependencies 引用也会被打入 asar 中，非主进程使用的包不要放入 dependencies 可以有效减小包大小。</p><h3 id="electron-forge-maker-dmg"><a class="header-anchor" href="#electron-forge-maker-dmg" aria-hidden="true">#</a> @electron-forge/maker-dmg</h3><div class="language-ts"><pre><code><span class="token comment">// forge.config.ts</span>\n<span class="token keyword">const</span> <span class="token constant">RELEASE_APP_DIR</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./out/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">APP_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>platform<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">ARCH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">APP_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.app</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  makers<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">&#39;@electron-forge/maker-dmg&#39;</span><span class="token punctuation">,</span>\n      config<span class="token operator">:</span> <span class="token punctuation">{</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;./icon/icon.icns&#39;</span><span class="token punctuation">,</span>\n        background<span class="token operator">:</span> <span class="token string">&#39;./icon/background.png&#39;</span><span class="token punctuation">,</span>\n        format<span class="token operator">:</span> <span class="token string">&#39;ULFO&#39;</span><span class="token punctuation">,</span>\n        contents<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">192</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">244</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token constant">RELEASE_APP_DIR</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">448</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">244</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;link&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token string">&#39;/Applications&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">192</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">700</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;position&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token string">&#39;.background&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">292</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">700</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;position&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token string">&#39;.VolumeIcon.icns&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">392</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">700</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;position&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token string">&#39;.DS_Store&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">492</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">700</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;position&#39;</span><span class="token punctuation">,</span> path<span class="token operator">:</span> <span class="token string">&#39;.Trashes&#39;</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div><h3 id="felixrieseberg-electron-forge-maker-nsis-for-exe"><a class="header-anchor" href="#felixrieseberg-electron-forge-maker-nsis-for-exe" aria-hidden="true">#</a> @felixrieseberg/electron-forge-maker-nsis for exe</h3><div class="language-ts"><pre><code><span class="token comment">// forge.config.ts</span>\nmakers<span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;@felixrieseberg/electron-forge-maker-nsis&#39;</span><span class="token punctuation">,</span>\n    config<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// codesigning: {</span>\n      <span class="token comment">//   certificateFile?: string;</span>\n      <span class="token comment">//   certificatePassword?: string;</span>\n      <span class="token comment">// },</span>\n      updater<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span>\n</code></pre></div><div class="language-json"><pre><code><span class="token comment">// package.json</span>\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;appId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.xxx.xxx&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;productName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;应用名称&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;nsis&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;oneClick&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;allowElevation&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;createDesktopShortcut&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;createStartMenuShortcut&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;allowToChangeInstallationDirectory&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;perMachine&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;deleteAppDataOnUninstall&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;installerIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;icon/icon.ico&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;installerHeaderIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;icon/icon.ico&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;guid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;publish&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;provider&quot;</span><span class="token operator">:</span> <span class="token string">&quot;generic&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;channel&quot;</span><span class="token operator">:</span> <span class="token string">&quot;latest&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="mac-签名与公证"><a class="header-anchor" href="#mac-签名与公证" aria-hidden="true">#</a> MAC 签名与公证</h2><p>坑 2：根据官网配置，始终无法成功公证，最后使用 codesign 与 xcrun notarytool 指令手动签名与公证</p><div class="language-ts"><pre><code><span class="token comment">// forge.config.ts</span>\n  hooks<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">preMake</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>platform <span class="token operator">==</span> <span class="token string">&#39;darwin&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> <span class="token function">makeMacProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">await</span> <span class="token function">signMac</span><span class="token punctuation">(</span><span class="token string">&#39;/path/to/xxx.app&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;APP_NAME&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">postMake</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>platform <span class="token operator">==</span> <span class="token string">&#39;darwin&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> <span class="token function">notarizeMac</span><span class="token punctuation">(</span><span class="token string">&#39;/path/to/xxx.dmg&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><h3 id="签名"><a class="header-anchor" href="#签名" aria-hidden="true">#</a> 签名</h3><p>将证书存入钥匙串<a href="https://www.jianshu.com/p/0d89a18308b2" target="_blank" rel="noopener noreferrer">参考此文 “代码签名”部分 1、2</a></p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token constant">NEED_SIGN_FW</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">&#39;Contents/Frameworks/Electron&quot; &quot;Framework.framework/Versions/A/Libraries/libEGL.dylib&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;Contents/Frameworks/Electron&quot; &quot;Framework.framework/Versions/A/Libraries/libffmpeg.dylib&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;Contents/Frameworks/Electron&quot; &quot;Framework.framework/Versions/A/Libraries/libGLESv2.dylib&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;Contents/Frameworks/Electron&quot; &quot;Framework.framework/Versions/A/Libraries/libvk_swiftshader.dylib&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;Contents/Frameworks/Squirrel.framework/Versions/A/Resources/ShipIt&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span>\n<span class="token keyword">const</span> <span class="token constant">ETM_DIR</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./entitlements.mac.plist</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token keyword">function</span> <span class="token function">signMac</span><span class="token punctuation">(</span>appPath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">APP_NAME</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> caName <span class="token operator">=</span> <span class="token string">&#39;Developer ID Application: CompanyName (xxxxxxxx)&#39;</span>\n  <span class="token keyword">const</span> needSignDirs<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>appPath<span class="token punctuation">]</span>\n  <span class="token constant">NEED_SIGN_FW</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>subdir<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    needSignDirs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>appPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>subdir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token function">execPromise</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">security find-identity -v -p codesigning</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> stdout<span class="token punctuation">,</span> stderr <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> stdout<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>caName<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>hasCertificate<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasCertificate<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;钥匙串中没有需要的证书&#39;</span><span class="token punctuation">)</span>\n      <span class="token keyword">return</span> <span class="token function">execPromise</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">xattr -cr </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>appPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> signList<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> stdout<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> stderr<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n      needSignDirs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        signList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n          <span class="token function">execPromise</span><span class="token punctuation">(</span>\n            <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">codesign --force --deep --timestamp --options runtime --entitlements </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">ETM_DIR</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> --sign &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>caName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; --verbose=2 -v </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>signList<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resList<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;【签名完成】&#39;</span><span class="token punctuation">,</span> resList<span class="token punctuation">)</span>\n      <span class="token keyword">return</span> resList\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// 查看应用的签名： codesign -d -v -r - /path/to/xxx.app</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">execPromise</span><span class="token punctuation">(</span>\n  command<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> stdout<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> stderr<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">exec</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n      <span class="token keyword">else</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> stdout<span class="token punctuation">,</span> stderr <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="language-xml"><pre><code><span class="token comment">&lt;!-- entitlements.mac.plist --&gt;</span>\n<span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">plist</span> <span class="token name">PUBLIC</span> <span class="token string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="token string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plist</span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dict</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>com.apple.security.cs.allow-unsigned-executable-memory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>true</span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>com.apple.security.cs.allow-jit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>true</span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">&gt;</span></span>com.apple.security.cs.disable-library-validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>true</span><span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dict</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plist</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="公证"><a class="header-anchor" href="#公证" aria-hidden="true">#</a> 公证</h3><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">makeMacProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> conf <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">--apple-id &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NOTARY_APP_ID</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; --team-id &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NOTARY_TEAM_ID</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; --password &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NOTARY_PASSWORD</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">`</span></span>\n  <span class="token keyword">return</span> <span class="token function">execPromise</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">xcrun notarytool store-credentials HAHAHA </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>conf<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">notarizeMac</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">dmgPath</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">【开始公证】: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dmgPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token function">execPromise</span><span class="token punctuation">(</span>\n    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">xcrun notarytool submit </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dmgPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> --keychain-profile &quot;HAHAHA&quot; --wait</span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> stdout<span class="token punctuation">,</span> stderr <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> res <span class="token operator">=</span> stdout <span class="token operator">||</span> stderr\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;Invalid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;【公证失败】&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>\n      <span class="token comment">// @ts-ignore</span>\n      <span class="token keyword">return</span> <span class="token function">logNotarytoolErr</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">id: .{36}</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;【公证完成】&#39;</span><span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> res\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// xcrun notarytool log &quot;96e8072f-4a0c-443d-b2c3-076b39376817&quot; --keychain-profile &quot;OneApps&quot;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">logNotarytoolErr</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">id</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">execPromise</span><span class="token punctuation">(</span>\n    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">xcrun notarytool log &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; --keychain-profile &quot;OneApps&quot;</span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> stdout<span class="token punctuation">,</span> stderr <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> res <span class="token operator">=</span> stdout <span class="token operator">||</span> stderr\n    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;【公证失败原因】&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="自动更新"><a class="header-anchor" href="#自动更新" aria-hidden="true">#</a> 自动更新</h2><h3 id="mac-自更新依赖-electron-forge-maker-zip"><a class="header-anchor" href="#mac-自更新依赖-electron-forge-maker-zip" aria-hidden="true">#</a> MAC 自更新依赖@electron-forge/maker-zip</h3><div class="language-ts"><pre><code><span class="token comment">// forge.config.ts</span>\n  makers<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">&#39;@electron-forge/maker-zip&#39;</span><span class="token punctuation">,</span>\n      platforms<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;darwin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      config<span class="token operator">:</span> <span class="token punctuation">{</span>\n        macUpdateManifestBaseUrl<span class="token operator">:</span> <span class="token string">&#39;https://XX.oss.aliyuncs.com/apps&#39;</span><span class="token punctuation">,</span>\n        macUpdateReleaseNotes<span class="token operator">:</span> <span class="token string">&#39;添加了自动更新功能&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre></div><p>打包后出现 RELEASES.json、XXXX-${platform}-${arch}-${version}.zip，后续自动更新依赖此文件。DMG 包供第一次安装使用。</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> autoUpdater<span class="token punctuation">,</span> dialog <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span>\nautoUpdater<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;自动更新&#39;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nautoUpdater<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update-available&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;自动更新 有新版本&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nautoUpdater<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update-not-available&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;自动更新 没有新版本&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nautoUpdater<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update-downloaded&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;自动更新 新版本下载完成&#39;</span><span class="token punctuation">)</span>\n  autoUpdater<span class="token punctuation">.</span><span class="token function">quitAndInstall</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nautoUpdater<span class="token punctuation">.</span><span class="token function">setFeedURL</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  url<span class="token operator">:</span> <span class="token string">&#39;https://XX.oss.aliyuncs.com/apps/RELEASES.json&#39;</span><span class="token punctuation">,</span>\n  serverType<span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nautoUpdater<span class="token punctuation">.</span><span class="token function">checkForUpdates</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="win-自更新依赖-electron-updater-隶属于-electron-builder"><a class="header-anchor" href="#win-自更新依赖-electron-updater-隶属于-electron-builder" aria-hidden="true">#</a> WIN 自更新依赖 electron-updater 隶属于 electron-builder</h3><p>打包后出现 latest.yml、XXX Setup ${version}.exe.blockmap、XXX Setup ${version}.exe</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> autoUpdater <span class="token keyword">as</span> winAutoUpdater <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron-updater&#39;</span>\nwinAutoUpdater<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;自动更新&#39;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nwinAutoUpdater<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update-available&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;自动更新 有新版本&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nwinAutoUpdater<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update-not-available&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;自动更新 没有新版本&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nwinAutoUpdater<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;update-downloaded&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;自动更新 新版本下载完成&#39;</span><span class="token punctuation">)</span>\n  winAutoUpdater<span class="token punctuation">.</span><span class="token function">quitAndInstall</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nwinAutoUpdater<span class="token punctuation">.</span><span class="token function">setFeedURL</span><span class="token punctuation">(</span><span class="token string">&#39;https://XX.oss.aliyuncs.com/apps&#39;</span><span class="token punctuation">)</span>\nwinAutoUpdater<span class="token punctuation">.</span><span class="token function">checkForUpdates</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="todo"><a class="header-anchor" href="#todo" aria-hidden="true">#</a> Todo</h2><ul><li>多客户区分不同版本</li><li>自动更新校验时机（打开软件？目前可以，不过存在不同多版本）</li></ul>',29)];p.render=function(a,t,p,e,c,u){return n(),s("div",null,o)};export{t as __pageData,p as default};
