import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"前端必会的三种mock方式","frontmatter":{"date":"2022-09-13","title":"前端必会的三种mock方式","tags":["tool"],"describe":"前端必会的三种mock方式"},"headers":[{"level":2,"title":"MockJS","slug":"mockjs"},{"level":3,"title":"介绍","slug":"介绍"},{"level":3,"title":"使用","slug":"使用"},{"level":3,"title":"如何在项目中使用","slug":"如何在项目中使用"},{"level":2,"title":"Ajax Interceptor","slug":"ajax-interceptor"},{"level":3,"title":"安装","slug":"安装"},{"level":2,"title":"whistle","slug":"whistle"}],"relativePath":"docs/tool/mock.md","lastUpdated":1743566425795.4045}';var p={};const o=[a('<p>mock是前后端联调不可缺少的一部分，倘若前期开发时定好接口规范（当然避免不了后端改动），那么前端就可以通过mock数据的方式代替后端同事。接下来我会讲一下我经常使用的一些工具。</p><h2 id="mockjs"><a class="header-anchor" href="#mockjs" aria-hidden="true">#</a> MockJS</h2><h3 id="介绍"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h3><p><a href="http://mockjs.com/0.1/#mock" target="_blank" rel="noopener noreferrer">官方网站</a> <br> Mock.js 是一款模拟数据生成器，旨在帮助前端攻城师独立于后端进行开发，帮助编写单元测试。</p><h3 id="使用"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><ul><li><p>安装</p><div class="language-bash"><pre><code><span class="token function">npm</span> <span class="token function">install</span> mockjs\n</code></pre></div></li><li><p>使用</p><div class="language-js"><pre><code><span class="token comment">// 使用</span>\n<span class="token keyword">var</span> Mock <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mockjs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> data <span class="token operator">=</span> Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token string-property property">&#39;list|1-10&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        <span class="token string-property property">&#39;id|+1&#39;</span><span class="token operator">:</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div></li></ul><h3 id="如何在项目中使用"><a class="header-anchor" href="#如何在项目中使用" aria-hidden="true">#</a> 如何在项目中使用</h3><ol><li><p>创建mockData，yarn init初始化</p></li><li><p>添加app.js，并添加express启动服务</p><div class="language-js"><pre><code> <span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">const</span> bodyParse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;body-parser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n <span class="token comment">/*为app添加中间件处理跨域请求*/</span>\n app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Methods&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;PUT, GET, POST, DELETE, OPTIONS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X-Requested-With&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Headers&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParse<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>\n   bodyParse<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n     <span class="token literal-property property">extended</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 扩展模式</span>\n     <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment">// 限制2m</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n <span class="token keyword">const</span> testRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./router/test&#39;</span><span class="token punctuation">)</span>\n app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/mockJS/api/testApi&#39;</span><span class="token punctuation">,</span> testRouter<span class="token punctuation">)</span>\n\n app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n   console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;服务启动http://localhost:8080&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre></div></li><li><p>创建test文件</p><div class="language-js"><pre><code> <span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">const</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">const</span> mock <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;mockjs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/demo&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n   res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n     <span class="token operator">...</span>mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n       <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n         <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Syntax Demo&quot;</span><span class="token punctuation">,</span>\n\n         <span class="token string-property property">&quot;string1|1-10&quot;</span><span class="token operator">:</span> <span class="token string">&quot;★&quot;</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;string2|3&quot;</span><span class="token operator">:</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span>\n\n         <span class="token string-property property">&quot;number1|+1&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;number2|1-100&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;number3|1-100.1-10&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;number4|123.1-10&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;number5|123.3&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;number6|123.10&quot;</span><span class="token operator">:</span> <span class="token number">1.123</span><span class="token punctuation">,</span>\n\n         <span class="token string-property property">&quot;boolean1|1&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;boolean2|1-2&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n         <span class="token string-property property">&quot;object1|2-4&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n           <span class="token number">110000</span><span class="token operator">:</span> <span class="token string">&quot;北京市&quot;</span><span class="token punctuation">,</span>\n           <span class="token number">120000</span><span class="token operator">:</span> <span class="token string">&quot;天津市&quot;</span><span class="token punctuation">,</span>\n           <span class="token number">130000</span><span class="token operator">:</span> <span class="token string">&quot;河北省&quot;</span><span class="token punctuation">,</span>\n           <span class="token number">140000</span><span class="token operator">:</span> <span class="token string">&quot;山西省&quot;</span><span class="token punctuation">,</span>\n         <span class="token punctuation">}</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;object2|2&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n           <span class="token number">310000</span><span class="token operator">:</span> <span class="token string">&quot;上海市&quot;</span><span class="token punctuation">,</span>\n           <span class="token number">320000</span><span class="token operator">:</span> <span class="token string">&quot;江苏省&quot;</span><span class="token punctuation">,</span>\n           <span class="token number">330000</span><span class="token operator">:</span> <span class="token string">&quot;浙江省&quot;</span><span class="token punctuation">,</span>\n           <span class="token number">340000</span><span class="token operator">:</span> <span class="token string">&quot;安徽省&quot;</span><span class="token punctuation">,</span>\n         <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n         <span class="token string-property property">&quot;array1|1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;AMD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KMD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;UMD&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;array2|1-10&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Mock.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n         <span class="token string-property property">&quot;array3|3&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Mock.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n         <span class="token function-variable function">function</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n           <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">;</span>\n         <span class="token punctuation">}</span><span class="token punctuation">,</span>\n       <span class="token punctuation">}</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>\n</code></pre></div></li><li><p>浏览器访问<a href="http://localhost:8080/mockJS/api/testApi/demo" target="_blank" rel="noopener noreferrer">http://localhost:8080/mockJS/api/testApi/demo</a><img src="/blog/_assets/mockjs.fdeb3b0e.jpg" alt="mockJs"></p></li><li><p>配置webpack或vite的proxy，添加mock配置</p><div class="language-js"><pre><code><span class="token operator">...</span>\n<span class="token string-property property">&#39;/mockJS&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n   <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:8080&#39;</span><span class="token punctuation">,</span>\n   <span class="token literal-property property">ws</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n   <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n</code></pre></div></li></ol><h2 id="ajax-interceptor"><a class="header-anchor" href="#ajax-interceptor" aria-hidden="true">#</a> Ajax Interceptor</h2><p>我认为Interceptor应该是每个前端都该安装的一个插件，主要有以下几个原因：</p><ol><li>开发阶段，后端只定义了接口并没有部署服务时，可以用来mock接口进行测试</li><li>测试边界问题，比如返回data为null或返回data数据量较大的一个展示</li><li>用来调试问题，修改接口不同的返回格式查看不同的页面表现</li></ol><h3 id="安装"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><ol><li>安装 [chrome扩展]((ttps://chrome.google.com/webstore/detail/ajax-interceptor/nhpjggchkhnlbgdfcbgpdpkifemomkpg?hl=zh-CN)</li><li>使用 <img src="/blog/_assets/interceptor.07722d55.jpg" alt="interceptor"></li></ol><h2 id="whistle"><a class="header-anchor" href="#whistle" aria-hidden="true">#</a> whistle</h2><p>抓包、修改http请求、响应、代理服务器等等功能</p><p>可以看<a href="https://wang1xiang.github.io/blog/docs/tool/whistle.html" target="_blank" rel="noopener noreferrer">这篇文章</a></p>',16)];p.render=function(a,t,p,e,c,u){return n(),s("div",null,o)};export{t as __pageData,p as default};
