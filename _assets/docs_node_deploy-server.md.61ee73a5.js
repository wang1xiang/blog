import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"使用node命令自动部署服务","frontmatter":{"date":"2022-09-14","title":"使用node命令自动部署服务","tags":["node","vite"],"describe":"部署自己的blog到服务器上"},"headers":[{"level":3,"title":"github pages部署","slug":"github-pages部署"},{"level":3,"title":"服务器部署","slug":"服务器部署"}],"relativePath":"docs/node/deploy-server.md","lastUpdated":1670987452814.2666}';var p={};const o=[a('<p>自从有了服务器之后，以前用vitepress写的博客，每次修改之后，既要部署在github上，又想要部署在自己的服务器上。<br></p><h3 id="github-pages部署"><a class="header-anchor" href="#github-pages部署" aria-hidden="true">#</a> github pages部署</h3><p>github的部署已经有<a href="https://github.com/wang1xiang/blog/blob/master/scripts/bin/deploy.sh" target="_blank" rel="noopener noreferrer">deploy</a>脚本，可以输入<code>yarn deploy</code>命令直接部署。</p><h3 id="服务器部署"><a class="header-anchor" href="#服务器部署" aria-hidden="true">#</a> 服务器部署</h3><p>想从本地部署服务器，需要几个步骤：</p><ol><li><p>连接服务器 使用<a href="https://www.npmjs.com/package/ssh2-sftp-client" target="_blank" rel="noopener noreferrer">ssh2-sftp-client</a></p><div class="language-js"><pre><code><span class="token comment">// config.js</span>\n <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n   <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;43.140.252.63&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 服务器地址</span>\n   <span class="token literal-property property">remoteStatic</span><span class="token operator">:</span> <span class="token string">&#39;/usr/local/tomcat/webapps/ROOT/dist.tar.gz&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 需要上传到服务器的目录</span>\n   <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 端口</span>\n   <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span> <span class="token comment">// root</span>\n   <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 密码 执行脚本时传入 node xxx/upload.js password</span>\n   <span class="token literal-property property">localStatic</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../../.vitepress/dist.tar.gz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// tar.gz存在的目录</span>\n <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// index.js</span>\n <span class="token keyword">const</span> Client <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;ssh2-sftp-client&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./config&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n \n sftp\n   <span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>\n   <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;sftp连接成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token operator">...</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div></li><li><p>上传打包后的文件</p><ul><li><p>首先判断dist目录是否存在</p></li><li><p>如果存在，压缩后再传入（dist文件太多，传输太慢）</p><div class="language-js"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>localStatic<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;开始上传压缩文件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token keyword">return</span> sftp<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>localStatic<span class="token punctuation">,</span> options<span class="token punctuation">.</span>remoteStatic<span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   isDist <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;压缩文件不存在，开始上传dist目录&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token keyword">return</span> sftp<span class="token punctuation">.</span><span class="token function">uploadDir</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">,</span> options<span class="token punctuation">.</span>remoteStatic<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token punctuation">}</span>\n</code></pre></div></li><li><p>上传完成，使用ssh2进行远程命令解压</p><div class="language-js"><pre><code><span class="token operator">...</span>\n <span class="token keyword">const</span> <span class="token punctuation">{</span> Client <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;ssh2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">const</span> conn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n conn\n   <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;ready&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n     <span class="token comment">// 远程解压</span>\n     <span class="token keyword">const</span> remoteModule <span class="token operator">=</span> options<span class="token punctuation">.</span>remoteStatic<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>\n       <span class="token string">&quot;dist.tar.gz&quot;</span><span class="token punctuation">,</span>\n       <span class="token string">&quot;&quot;</span>\n     <span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token comment">/**\n      * 执行命令\n       * cd /usr/local/tomcat/webapps/ROOT\n       * tar xvf dist.tar.gz\n       */</span>\n     conn<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>\n       <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">cd </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>remoteModule<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;tar xvf dist.tar.gz</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stream</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n         <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>\n         stream\n           <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n             code <span class="token operator">===</span> <span class="token number">0</span>\n               <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;解压完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n               <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;解压失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n           <span class="token punctuation">}</span><span class="token punctuation">)</span>\n           <span class="token operator">...</span>\n       <span class="token punctuation">}</span><span class="token punctuation">)</span>\n       <span class="token operator">...</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div></li></ul></li><li><p>将命令添加在scripts中</p><div class="language-json"><pre><code><span class="token punctuation">{</span>\n <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n   <span class="token property">&quot;zip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cd .vitepress/dist &amp;&amp; tar -zcvf ../dist.tar.gz *&quot;</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;build:server&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env APP_ENVKEY=server vitepress build &amp;&amp; npm run zip&quot;</span><span class="token punctuation">,</span>\n   <span class="token property">&quot;deploy:server&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build:server &amp;&amp; node scripts/upload&quot;</span><span class="token punctuation">,</span>\n <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p>输入命令<code>npm run deploy:server password</code>，password为服务器密码</p></li></ol><p>通过以上几个步骤，就可以把前端服务直接通过命令行的方式部署在服务器上<br><a href="https://github.com/wang1xiang/blog/blob/master/scripts/upload" target="_blank" rel="noopener noreferrer">代码地址</a></p>',7)];p.render=function(a,t,p,e,c,u){return n(),s("div",null,o)};export{t as __pageData,p as default};
