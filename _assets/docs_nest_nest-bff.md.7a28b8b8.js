import{f as n,g as s,J as a}from"./common-03e46d7f.js";const p='{"title":"使用nest搭建BFF项目","frontmatter":{"date":"2024-06-21","title":"使用nest搭建BFF项目","tags":["nest"],"describe":"使用nest搭建BFF项目"},"headers":[{"level":2,"title":"nest 搭建 bff 过程","slug":"nest-搭建-bff-过程"},{"level":3,"title":"1. 全局安装 nestjs/cli","slug":"_1-全局安装-nestjs-cli"},{"level":3,"title":"2. 创建 nestjs 项目","slug":"_2-创建-nestjs-项目"},{"level":3,"title":"3. 安装 TypeORM 相关包","slug":"_3-安装-typeorm-相关包"},{"level":3,"title":"4. 创建数据库表的 entity","slug":"_4-创建数据库表的-entity"},{"level":3,"title":"5. 使用实体类","slug":"_5-使用实体类"}],"relativePath":"docs/nest/nest-bff.md","lastUpdated":1743400722771.411}';var t={};const o=[a('<p>由于之前在 express 项目中直接使用的 mysql2 操作数据库，TypeORM 在 express 中不好添加，所以该用 nest 来实现。</p><h2 id="nest-搭建-bff-过程"><a class="header-anchor" href="#nest-搭建-bff-过程" aria-hidden="true">#</a> nest 搭建 bff 过程</h2><h3 id="_1-全局安装-nestjs-cli"><a class="header-anchor" href="#_1-全局安装-nestjs-cli" aria-hidden="true">#</a> 1. 全局安装 nestjs/cli</h3><div class="language-bash"><pre><code><span class="token function">npm</span> <span class="token function">install</span> -g @nestjs/cli\n</code></pre></div><h3 id="_2-创建-nestjs-项目"><a class="header-anchor" href="#_2-创建-nestjs-项目" aria-hidden="true">#</a> 2. 创建 nestjs 项目</h3><div class="language-bash"><pre><code>nest new bff-project\n</code></pre></div><p>通过 <code>pnpm start</code> 启动项目，此时在浏览器中直接输入 <a href="http://localhost:3000/" target="_blank" rel="noopener noreferrer">http://localhost:3000/</a> 会出现 <code>Hello world</code></p><p>修改 nest-cli.json，添加 generateOptions，设置 spec 为 false，这样生成代码的时候不会生成测试代码，和 nest g xxx --no-spec 效果一样</p><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;$schema&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://json.schemastore.org/nest-cli&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;collection&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@nestjs/schematics&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;generateOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;spec&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;sourceRoot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;deleteOutDir&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="_3-安装-typeorm-相关包"><a class="header-anchor" href="#_3-安装-typeorm-相关包" aria-hidden="true">#</a> 3. 安装 TypeORM 相关包</h3><div class="language-bash"><pre><code><span class="token function">pnpm</span> <span class="token function">install</span> --save @nestjs/typeorm typeorm mysql2\n</code></pre></div><p>在 AppModule 引入 TypeOrmModule：</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TypeOrmModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/typeorm&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> AppController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.controller&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> AppService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.service&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> UserCountModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./user-count/user-count.module&#39;</span>\n\n@<span class="token function">Module</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    TypeOrmModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;114.116.234.221&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3309</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;test_server_see&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">database</span><span class="token operator">:</span> <span class="token string">&#39;passport&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">synchronize</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">logging</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">entities</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">poolSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">connectorPackage</span><span class="token operator">:</span> <span class="token string">&#39;mysql2&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">extra</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">authPlugin</span><span class="token operator">:</span> <span class="token string">&#39;sha256_password&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    UserCountModule<span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">controllers</span><span class="token operator">:</span> <span class="token punctuation">[</span>AppController<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">providers</span><span class="token operator">:</span> <span class="token punctuation">[</span>AppService<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre></div><h3 id="_4-创建数据库表的-entity"><a class="header-anchor" href="#_4-创建数据库表的-entity" aria-hidden="true">#</a> 4. 创建数据库表的 entity</h3><p>使用命令生成 userCount 模块：</p><div class="language-bash"><pre><code>nest g resource userCount\n</code></pre></div><p><img src="/blog/_assets/nest-generate-userCount.e58414ed.png" alt="nest-generate-userCount"></p><p>可以看到此时生成的文件是没有 spec 相关的测试文件</p><ol><li><p>创建 entities 目录，新建 user-auth.entity.ts 文件。</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  Entity<span class="token punctuation">,</span>\n  Column<span class="token punctuation">,</span>\n  PrimaryGeneratedColumn<span class="token punctuation">,</span>\n  CreateDateColumn<span class="token punctuation">,</span>\n  UpdateDateColumn<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span>\n\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entity</span></span><span class="token punctuation">(</span><span class="token string">&#39;user_auth&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UserAuth</span> <span class="token punctuation">{</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">PrimaryGeneratedColumn</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  id<span class="token operator">:</span> <span class="token builtin">number</span>\n\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;varchar&#39;</span><span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  src<span class="token operator">:</span> <span class="token builtin">string</span>\n\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;varchar&#39;</span><span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token number">128</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  uuid<span class="token operator">:</span> <span class="token builtin">string</span>\n\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">CreateDateColumn</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;datetime&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;created_at&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  createdAt<span class="token operator">:</span> Date\n\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">UpdateDateColumn</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;datetime&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;updated_at&#39;</span><span class="token punctuation">,</span> nullable<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  updatedAt<span class="token operator">:</span> Date\n\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;datetime&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;deleted_at&#39;</span><span class="token punctuation">,</span> nullable<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  deletedAt<span class="token operator">:</span> Date\n\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;tinyint&#39;</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;display_flag&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  displayFlag<span class="token operator">:</span> <span class="token builtin">number</span>\n\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Column</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;varchar&#39;</span><span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;src_uuid&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  srcUuid<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p>在 AppModule 中导入并注册 UserAuth 实体类</p><div class="language-js"><pre><code><span class="token comment">// app.module.ts</span>\n<span class="token operator">...</span><span class="token punctuation">.</span><span class="token keyword">import</span> <span class="token punctuation">{</span> UserAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./user-count/entities/user-auth.entity&#39;</span><span class="token punctuation">;</span>\n\n@<span class="token function">Module</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n   <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n     TypeOrmModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n       <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;114.116.234.221&#39;</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3309</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;test_server_see&#39;</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;qmp20240126#dshk&#39;</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">database</span><span class="token operator">:</span> <span class="token string">&#39;passport&#39;</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">synchronize</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">logging</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">entities</span><span class="token operator">:</span> <span class="token punctuation">[</span>UserAuth<span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">poolSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">connectorPackage</span><span class="token operator">:</span> <span class="token string">&#39;mysql2&#39;</span><span class="token punctuation">,</span>\n       <span class="token literal-property property">extra</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n         <span class="token literal-property property">authPlugin</span><span class="token operator">:</span> <span class="token string">&#39;sha256_password&#39;</span><span class="token punctuation">,</span>\n       <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n     UserCountModule<span class="token punctuation">,</span>\n   <span class="token punctuation">]</span><span class="token punctuation">,</span>\n   <span class="token literal-property property">controllers</span><span class="token operator">:</span> <span class="token punctuation">[</span>AppController<span class="token punctuation">]</span><span class="token punctuation">,</span>\n   <span class="token literal-property property">providers</span><span class="token operator">:</span> <span class="token punctuation">[</span>AppService<span class="token punctuation">]</span><span class="token punctuation">,</span>\n <span class="token punctuation">}</span><span class="token punctuation">)</span>\n <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre></div><p>需要将 <code>synchronize: false,</code> 因为在库中已经有此表了，设置为 true 时会创建表</p></li></ol><h3 id="_5-使用实体类"><a class="header-anchor" href="#_5-使用实体类" aria-hidden="true">#</a> 5. 使用实体类</h3><p>在 service 层(user-count.service.ts)中使用 UserAuth 实体类来执行数据库操作</p>',21)];t.render=function(a,p,t,e,c,r){return n(),s("div",null,o)};export{p as __pageData,t as default};
