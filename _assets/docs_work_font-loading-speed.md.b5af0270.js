import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"不同字体类型对网页加载速度的影响","frontmatter":{"date":"2022-09-05","title":"不同字体类型对网页加载速度的影响","tags":["work","javascript"],"describe":"记一次调整字体加载速度的过程"},"headers":[{"level":3,"title":"字体格式","slug":"字体格式"},{"level":3,"title":"如何提高网页字体加载速度","slug":"如何提高网页字体加载速度"}],"relativePath":"docs/work/font-loading-speed.md","lastUpdated":1743046189274.0508}';var p={};const o=[a('<h3 id="字体格式"><a class="header-anchor" href="#字体格式" aria-hidden="true">#</a> 字体格式</h3><ul><li>TTF(TrueType Font) 后缀为<code>.ttf</code> 优点：兼容性好 缺点：文件一般很大</li><li>OTF(OpenType Font) 后缀为<code>.otf</code>，也叫 Type 2 字体 优点： <ol><li>跨平台能力增强</li><li>生成文件尺寸更小</li></ol></li><li>WOFF(Web Open Font Format) 后缀为<code>.woff</code>，是一种网页所采用的字体格式标准，2009年提出<br> 字体格式使用zlib压缩，文件一般比TTF格式小40%</li><li>WOFF2 后缀为<code>.woff2</code>，在woff基础上进一步压缩体积</li></ul><p>总结</p><ul><li>TTF 的兼容性更好，但是其字体文件体积最大</li><li>WOFF 字体比 TTF 字体有更小的体积和更好的表现性</li><li>WOFF2 字体是对 WOFF 字体的升级</li></ul><h3 id="如何提高网页字体加载速度"><a class="header-anchor" href="#如何提高网页字体加载速度" aria-hidden="true">#</a> 如何提高网页字体加载速度</h3><ol><li><p>使用正确的字体(<a href="https://www.aconvert.com/cn/image/ttf-to-woff/" target="_blank" rel="noopener noreferrer">在线TTF转WOFF</a>、<a href="https://convertio.co/zh/woff-converter/" target="_blank" rel="noopener noreferrer">WOFF转换器</a>)</p><p>默认情况下，Woff 已经被压缩，这也是它比所有其他格式更快、更好的部分原因，并且所有现代浏览器都支持它。 Woff2 是 woff 格式的更快更好的版本，但 Internet Explorer 不支持它。</p></li><li><p>使用预加载<a href="https://wang1xiang.github.io/blog/docs/javascript/preload-prefetch.html" target="_blank" rel="noopener noreferrer">参考</a></p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preload<span class="token punctuation">&quot;</span></span> <span class="token attr-name">as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>font<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>font/woff2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fonts/Sacramento-Regular.woff2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>anonymous<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>as=&quot;font&quot; type=&quot;font/woff2&quot; 属性要求浏览器将此资源作为字体下载，crossorigin很重要，如果没有此属性，浏览器会忽略预加载的字体，并且会重新获取</p><p>在webpack项目中，可以使用<a href="./[preload-webpack-plugin&#39;](https://www.npmjs.com/package/@vue/preload-webpack-plugin).html">preload-webpack-plugin</a>插件</p><div class="language-ts"><pre><code><span class="token operator">...</span>\n<span class="token keyword">new</span> <span class="token class-name">PreloadWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n   rel<span class="token operator">:</span> <span class="token string">&#39;preload&#39;</span><span class="token punctuation">,</span>\n   <span class="token keyword">as</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.ttf$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;font&#39;</span><span class="token punctuation">;</span>\n     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.otf$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;font&#39;</span><span class="token punctuation">;</span>\n     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.woff$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;font&#39;</span><span class="token punctuation">;</span>\n     <span class="token keyword">return</span> <span class="token string">&#39;script&#39;</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n   include<span class="token operator">:</span> <span class="token string">&#39;allAssets&#39;</span><span class="token punctuation">,</span> <span class="token comment">// asyncChunks加载异步脚本块 allChunks initial</span>\n   <span class="token comment">// fileBlacklist: [/.css|.js/, /.whatever/], // 资源黑名单</span>\n   fileWhitelist<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.otf|.ttf|.woff|.woff2</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span> <span class="token comment">// 资源白名单</span>\n <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n</code></pre></div></li><li><p>使用正确的字体说明</p><div class="language-css"><pre><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>\n  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;Sacramento&#39;</span><span class="token punctuation">;</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>\n  <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>\n  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;../fonts/Sacramento-Regular.woff2&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;../fonts/Sacramento-Regular.woff&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">font-display</span><span class="token punctuation">:</span> swap<span class="token punctuation">;</span><span class="token comment">/* Read next point 描述了字体在页面加载期间应该如何表现*/</span> \n  <span class="token property">unicode-range</span><span class="token punctuation">:</span> U+000-5FF<span class="token punctuation">;</span><span class="token comment">/* Download only latin glyphs */</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p>避免字体加载过程中出现不可见文字</p></li></ol><p>使用js加载字体</p><div class="language-jsx"><pre><code><span class="token comment">// 优化字体加载 先判断浏览器是否已经加载过字体</span>\n <span class="token keyword">let</span> isLoaded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> document<span class="token punctuation">.</span>fonts<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>family <span class="token operator">===</span> <span class="token string">&#39;Sacramento&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n       isLoaded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n       <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n <span class="token punctuation">}</span>\n <span class="token comment">// 没有加载过在加载 已加载过就不再重复加载</span>\n <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLoaded<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FontFace</span><span class="token punctuation">(</span><span class="token string">&#39;Sacramento&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;url(/font/Sacramento-Regular.woff)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">await</span> font<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    document<span class="token punctuation">.</span>fonts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token punctuation">}</span>\n</code></pre></div>',8)];p.render=function(a,t,p,e,c,l){return n(),s("div",null,o)};export{t as __pageData,p as default};
