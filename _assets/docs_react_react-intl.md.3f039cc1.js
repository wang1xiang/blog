import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"react-intl国际化使用方案","frontmatter":{"date":"2022-11-15","title":"react-intl国际化使用方案","tags":["react"],"describe":"react-intl国际化使用方案"},"headers":[{"level":2,"title":"国际化介绍","slug":"国际化介绍"},{"level":2,"title":"使用步骤","slug":"使用步骤"},{"level":2,"title":"如何在非组件中使用 react-intl","slug":"如何在非组件中使用-react-intl"},{"level":2,"title":"更多","slug":"更多"},{"level":2,"title":"antd 国际化方案","slug":"antd-国际化方案"},{"level":2,"title":"react-intl结合antd使用","slug":"react-intl结合antd使用"}],"relativePath":"docs/react/react-intl.md","lastUpdated":1743591022149.7983}';var p={};const o=[a('<h2 id="国际化介绍"><a class="header-anchor" href="#国际化介绍" aria-hidden="true">#</a> 国际化介绍</h2><p>i18n：internationalization 国家化简称，首字母+首尾字母间隔的字母个数+尾字母，类似的还有 k8s(Kubernetes) <br><a href="https://formatjs.io/docs/getting-started/installation" target="_blank" rel="noopener noreferrer">React-intl</a>是 React 中最受欢迎的库。</p><h2 id="使用步骤"><a class="header-anchor" href="#使用步骤" aria-hidden="true">#</a> 使用步骤</h2><ul><li><p>安装</p><div class="language-bash"><pre><code><span class="token comment"># use npm</span>\n<span class="token function">npm</span> <span class="token function">install</span> react-intl -D\n<span class="token comment"># use yarn</span>\n</code></pre></div></li><li><p>项目入口文件配置</p><div class="language-tsx"><pre><code><span class="token comment">// index.tsx</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&quot;react-dom&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> IntlProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-intl&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;src/App&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentLang<span class="token punctuation">,</span> getCurrentMessages <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;src/locales&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&quot;./styles/index.less&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IntlProvider</span></span> <span class="token attr-name">locale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">getCurrentLang</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">messages</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">getCurrentMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">IntlProvider</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>IntlProvider 有三个配置参数：</p><ul><li>locale, <code>&lt;string&gt;</code>, 语言标记，例如 &#39;zh-CN&#39; &#39;en-US&#39;</li><li>messages, <code>&lt;object&gt;</code>, 国际化所需的 key-value 对象</li><li>formats, <code>&lt;object&gt;</code>, 自定义 format，比如日期格式、货币等</li></ul></li><li><p>在 src/locales 中创建国际化文件，一般有 en 和 zh，如</p><div class="language-bash"><pre><code>├─src\n│  ├─en\n│  │  ├─index.ts\n│  ├─zh\n│  │  ├─index.ts\n<span class="token operator">|</span>  <span class="token operator">|</span>——index.ts\n</code></pre></div><p>添加键值对并导出</p><div class="language-ts"><pre><code><span class="token comment">// zh/index.ts</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  whatever<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">你好 {placeholder}</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><div class="language-ts"><pre><code><span class="token comment">// locales/index.ts</span>\n<span class="token keyword">import</span> zh <span class="token keyword">from</span> <span class="token string">&#39;./zh&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> en <span class="token keyword">from</span> <span class="token string">&#39;./en&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> ls <span class="token keyword">from</span> <span class="token string">&#39;src/utils/localStore&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createIntl<span class="token punctuation">,</span> createIntlCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-intl&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> _currentLang <span class="token operator">=</span> ls<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;qs_lang&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> messages <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string-property property">&#39;zh-CN&#39;</span><span class="token operator">:</span> zh<span class="token punctuation">,</span>\n  <span class="token string-property property">&#39;en-US&#39;</span><span class="token operator">:</span> en<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getCurrentLang</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _currentLang<span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getCurrentMessages</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> messages<span class="token punctuation">[</span>_currentLang<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createIntlCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> intl <span class="token operator">=</span> <span class="token function">createIntl</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span>\n    locale<span class="token operator">:</span> _currentLang<span class="token punctuation">,</span>\n    messages<span class="token operator">:</span> <span class="token function">getCurrentMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  cache\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> intl<span class="token punctuation">;</span>\n\n</code></pre></div></li><li><p>接着在组件中就可以使用<code>FormattedMessage</code>等组件</p><div class="language-tsx"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> FormattedMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-intl&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormattedMessage</span></span>\n      <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>whatever<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">description</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello world<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">defaultMessage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Hello {placeholder}<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">values</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> placeholder<span class="token operator">:</span> <span class="token string">&quot;world&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/&gt;</span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n</code></pre></div><p>或者在函数式组件中使用 hooks</p><div class="language-tsx"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useIntl <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-intl&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> formatMessage<span class="token operator">:</span> f <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useIntl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n      </span><span class="token punctuation">{</span><span class="token function">f</span><span class="token punctuation">(</span>\n        <span class="token punctuation">{</span>\n          id<span class="token operator">:</span> <span class="token string">&quot;whatever&quot;</span><span class="token punctuation">,</span>\n          description<span class="token operator">:</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span>\n          defaultMessage<span class="token operator">:</span> <span class="token string">&quot;Hello {placeholder}&quot;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> placeholder<span class="token operator">:</span> <span class="token string">&quot;world&quot;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n</code></pre></div><ul><li><code>&lt;FormattedMessage&gt;</code>组件中可以通过<code>values</code>属性来传值，如以上例子传递<code>{placeholder: &#39;world&#39;}</code>，渲染到对应的<code>你好 {placeholder}</code>位置</li><li><code>formatMessage</code>中传递第二个参数作为占位符的入参</li></ul></li></ul><h2 id="如何在非组件中使用-react-intl"><a class="header-anchor" href="#如何在非组件中使用-react-intl" aria-hidden="true">#</a> 如何在非组件中使用 react-intl</h2><p>例如我需要在组件目录下添加<code>constants.ts</code>文件来管理静态变量，而且需要国际化处理，因为它不是 react 组件，所以是没法用以上的方法处理。</p><p>这时候就需要使用<a href="https://formatjs.io/docs/react-intl/api/#createintl" target="_blank" rel="noopener noreferrer">createIntl</a>来处理，createIntl 允许在不使用 Provider 的情况下创建 IntlShape 对象，它返回一个可以在 React 组件外部使用的对象。</p><div class="language-ts"><pre><code><span class="token comment">// locales/index.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createIntl<span class="token punctuation">,</span> createIntlCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-intl&#39;</span><span class="token punctuation">;</span>\n<span class="token operator">...</span>\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createIntlCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> intl <span class="token operator">=</span> <span class="token function">createIntl</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span>\n    locale<span class="token operator">:</span> _currentLang<span class="token punctuation">,</span>\n    messages<span class="token operator">:</span> <span class="token function">getCurrentMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  cache\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> intl<span class="token punctuation">;</span>\n</code></pre></div><p>在非组件文件中使用时</p><div class="language-ts"><pre><code><span class="token comment">// xxx/constants.ts</span>\n<span class="token keyword">import</span> intl <span class="token keyword">from</span> <span class="token string">&quot;src/locales&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> a <span class="token operator">=</span> intl<span class="token punctuation">.</span><span class="token function">formatMessage</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&quot;whatever&quot;</span><span class="token punctuation">,</span> defaultMessage<span class="token operator">:</span> <span class="token string">&quot;你好 {world}&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> placeholder<span class="token operator">:</span> <span class="token string">&quot;world&quot;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="更多"><a class="header-anchor" href="#更多" aria-hidden="true">#</a> 更多</h2><p>react-intl还能处理像货币、时间、数字等等各种国际化问题，更多请参考<a href="https://github1s.com/formatjs/formatjs/blob/main/packages/react-intl/examples/Hooks.tsx#L120" target="_blank" rel="noopener noreferrer">官方文档</a></p><p><a href="https://github1s.com/formatjs/formatjs/blob/main/packages/react-intl/examples/Hooks.tsx#L120" target="_blank" rel="noopener noreferrer">github上的demo</a></p><h2 id="antd-国际化方案"><a class="header-anchor" href="#antd-国际化方案" aria-hidden="true">#</a> antd 国际化方案</h2><p>参考<a href="https://ant.design/docs/react/i18n-cn" target="_blank" rel="noopener noreferrer">国际化</a></p><p>其实就是使用 React 的 context 特性，只需要一个 Provider Component，用它来提供国际化的上下文。</p><div class="language-tsx"><pre><code><span class="token keyword">import</span> zhCN <span class="token keyword">from</span> <span class="token string">&quot;antd/es/locale/zh_CN&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">return</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigProvider</span></span> <span class="token attr-name">locale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>zhCN<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ConfigProvider</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="react-intl结合antd使用"><a class="header-anchor" href="#react-intl结合antd使用" aria-hidden="true">#</a> react-intl结合antd使用</h2><p>以上步骤完成后，在切换语言为英文时，<code>react-intl</code>中使用的国际化文案正常显示。但此时会发现antd中组件依然显示的是中文，因为此时我们还没有对antd组件的国际化进行处理。</p><ol><li>在<code>src/locales</code>中导出antd相关的国际化文案</li><li>在入口文件<code>index.tsx</code>中antd全局配置组件中引入即可</li></ol><div class="language-ts"><pre><code><span class="token comment">// src/locales/index.ts</span>\n<span class="token keyword">import</span> zh <span class="token keyword">from</span> <span class="token string">&#39;./zh&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> en <span class="token keyword">from</span> <span class="token string">&#39;./en&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> enUS <span class="token keyword">from</span> <span class="token string">&#39;antd/es/locale/en_US&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> zhCN <span class="token keyword">from</span> <span class="token string">&#39;antd/es/locale/zh_CN&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ls <span class="token keyword">from</span> <span class="token string">&#39;src/utils/localStore&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createIntl<span class="token punctuation">,</span> createIntlCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-intl&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> _currentLang <span class="token operator">=</span> ls<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;qs_lang&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getCurrLang</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _currentLang<span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> messages <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string-property property">&#39;zh-CN&#39;</span><span class="token operator">:</span> zh<span class="token punctuation">,</span>\n  <span class="token string-property property">&#39;en-US&#39;</span><span class="token operator">:</span> en<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> antMessages <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string-property property">&#39;zh-CN&#39;</span><span class="token operator">:</span> zhCN<span class="token punctuation">,</span>\n  <span class="token string-property property">&#39;en-US&#39;</span><span class="token operator">:</span> enUS<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getAntMessages</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> antMessages<span class="token punctuation">[</span>_currentLang<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getCurrentMessages</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> messages<span class="token punctuation">[</span>_currentLang<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token operator">...</span>\n</code></pre></div><div class="language-tsx"><pre><code><span class="token comment">// src/index.tsx</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&quot;react-dom&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> IntlProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-intl&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;src/App&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ConfigProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;antd&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentLang<span class="token punctuation">,</span> getCurrentMessages<span class="token punctuation">,</span> getAntMessages <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;src/locales&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&quot;./styles/index.less&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IntlProvider</span></span> <span class="token attr-name">locale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">getCurrentLang</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">messages</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">getCurrentMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigProvider</span></span> <span class="token attr-name">locale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">getAntMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ConfigProvider</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">IntlProvider</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',22)];p.render=function(a,t,p,e,c,l){return n(),s("div",null,o)};export{t as __pageData,p as default};
