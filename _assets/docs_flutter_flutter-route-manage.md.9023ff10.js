import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"flutter路由管理","frontmatter":{"date":"2024-05-03","title":"flutter路由管理","tags":["flutter"],"describe":"flutter路由管理"},"headers":[{"level":2,"title":"MaterialPageRoute","slug":"materialpageroute"},{"level":2,"title":"Navigator","slug":"navigator"},{"level":2,"title":"路由传参","slug":"路由传参"},{"level":2,"title":"命名路由","slug":"命名路由"},{"level":2,"title":"路由守卫","slug":"路由守卫"}],"relativePath":"docs/flutter/flutter-route-manage.md","lastUpdated":1743046188583.0435}';var p={};const o=[a('<p>Flutter 路由管理也称为导航管理，Android 和 IOS 相同，都是维护一个路由栈。</p><h2 id="materialpageroute"><a class="header-anchor" href="#materialpageroute" aria-hidden="true">#</a> MaterialPageRoute</h2><p>MaterialPageRoute 是 Material 提供的组件，针对不同平台，实现不同的切换动画，表示占有整个屏幕空间的一个模态路由页面</p><div class="language-dart"><pre><code><span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token class-name">WidgetBuilder</span> builder<span class="token punctuation">,</span> <span class="token comment">// 返回新路由的实例</span>\n  <span class="token class-name">RouteSettings</span> settings<span class="token punctuation">,</span> <span class="token comment">// 路由的配置信息，如路由名称、是否初始路由（首页）</span>\n  bool maintainState <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 原路由是否要保存在内存中</span>\n  bool fullscreenDialog <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否全屏模态对话框</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="navigator"><a class="header-anchor" href="#navigator" aria-hidden="true">#</a> Navigator</h2><p>路由管理组件</p><div class="language-dart"><pre><code><span class="token comment">// 压栈处理</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n  context<span class="token punctuation">,</span>  <span class="token comment">// build 方法的参数</span>\n  <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">SecondPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n<span class="token comment">// 出栈</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="路由传参"><a class="header-anchor" href="#路由传参" aria-hidden="true">#</a> 路由传参</h2><div class="language-dart"><pre><code><span class="token comment">// 压栈处理</span>\n<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n  context<span class="token punctuation">,</span>\n  <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>\n    builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token class-name">TipRoute</span><span class="token punctuation">(</span>\n        <span class="token comment">// 路由参数</span>\n        text<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;我是提示xxxx&quot;</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//输出`TipRoute`路由返回结果</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;路由返回值: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">result</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// TipRoute</span>\n<span class="token keyword">class</span> <span class="token class-name">TipRoute</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token class-name">TipRoute</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token comment">// 接收一个text参数</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;我是返回值&quot;</span></span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="命名路由"><a class="header-anchor" href="#命名路由" aria-hidden="true">#</a> 命名路由</h2><div class="language-dart"><pre><code><span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n  title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;Flutter Demo&#39;</span></span><span class="token punctuation">,</span>\n  theme<span class="token punctuation">:</span> <span class="token class-name">ThemeData</span><span class="token punctuation">(</span>primarySwatch<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">//名为&quot;/&quot;的路由作为应用的home(首页)</span>\n  initialRoute<span class="token punctuation">:</span><span class="token string-literal"><span class="token string">&quot;/&quot;</span></span><span class="token punctuation">,</span>\n  <span class="token comment">//注册路由表</span>\n  routes<span class="token punctuation">:</span><span class="token punctuation">{</span>\n    <span class="token string-literal"><span class="token string">&quot;new_page&quot;</span></span><span class="token punctuation">:</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">NewRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token string-literal"><span class="token string">&quot;/&quot;</span></span><span class="token punctuation">:</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">MyHomePage</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;首页&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//注册首页路由</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 跳转</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;new_page&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushReplacementNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;new_page&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 参数传递</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;new_page&quot;</span></span><span class="token punctuation">,</span> arguments<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;hi&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token metadata function">@override</span>\n<span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">ModalRoute</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>settings<span class="token punctuation">.</span>arguments<span class="token punctuation">;</span> <span class="token comment">// &quot;hi&quot;</span>\n</code></pre></div><h2 id="路由守卫"><a class="header-anchor" href="#路由守卫" aria-hidden="true">#</a> 路由守卫</h2><div class="language-dart"><pre><code><span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token comment">//省略无关代码</span>\n  onGenerateRoute<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token class-name">RouteSettings</span> settings<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">{</span>\n      <span class="token class-name">String</span> routeName <span class="token operator">=</span> settings<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n      <span class="token comment">// 如果访问的路由页需要登录，但当前未登录，则直接返回登录页路由。</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',13)];p.render=function(a,t,p,e,c,l){return n(),s("div",null,o)};export{t as __pageData,p as default};
