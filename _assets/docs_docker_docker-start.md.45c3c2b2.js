import{f as e,g as r,J as a}from"./common-03e46d7f.js";const o='{"title":"前端Docker入门课","frontmatter":{"date":"2023-04-25","title":"前端Docker入门课","tags":["docker"],"describe":"前端Docker入门课"},"headers":[{"level":2,"title":"docker 是什么","slug":"docker-是什么"},{"level":3,"title":"名次解释","slug":"名次解释"}],"relativePath":"docs/docker/docker-start.md","lastUpdated":1742973716701.3682}';var d={};const t=[a('<p>一直听别人再说 docker 怎么怎么样，刚好最近服务器快到期了，需要更换一波服务器，里面部署了不少应用，一个一个移动挺麻烦的，听比人说 docker 就是一个迷你虚拟机，把所有</p><h2 id="docker-是什么"><a class="header-anchor" href="#docker-是什么" aria-hidden="true">#</a> docker 是什么</h2><p><img src="/blog/_assets/docker-logo.4ee29ffe.png" alt="docker-logo.png"> Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，该容器包含了应用程序的代码、运行环境、依赖库、配置文件等必需的资源，通过容器就可以实现方便快速并且与平台解耦的自动化部署方式，无论你部署时的环境如何，容器中的应用程序都会运行在同一种环境下。（更多详情请移步 docker 官网查看 docker）</p><h3 id="名次解释"><a class="header-anchor" href="#名次解释" aria-hidden="true">#</a> 名次解释</h3><h4 id="镜像-image"><a class="header-anchor" href="#镜像-image" aria-hidden="true">#</a> 镜像 Image</h4><p>负责创建 docker 容器的，有很多官方现成的镜像：node、mysql、monogo、nginx 可以从远程仓库下载，类似于系统装机时的系统盘或者系统镜像文件</p><h4 id="容器-container"><a class="header-anchor" href="#容器-container" aria-hidden="true">#</a> 容器 Container</h4><p>可以比拟成一个迷你的系统，例如一个只安装 mysql5.7 的 linux 最小系统，当然你喜欢也可以把 mysql、node 安装在同一个容器中，记住**，容器与容器，容器和主机都是互相隔离的**</p><h4 id="仓库-repository"><a class="header-anchor" href="#仓库-repository" aria-hidden="true">#</a> 仓库 Repository</h4><p>类似于 github 仓库，我们可以把制作好的镜像 push 云端的仓库，也可以从仓库 pull 下载镜像</p>',10)];d.render=function(a,o,d,c,i,s){return e(),r("div",null,t)};export{o as __pageData,d as default};
