import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"unocss使用记录","frontmatter":{"date":"2024-06-03","title":"unocss使用记录","tags":["work"],"describe":"unocss使用记录"},"headers":[{"level":2,"title":"基础安装","slug":"基础安装"},{"level":2,"title":"更多配置","slug":"更多配置"},{"level":3,"title":"Presets","slug":"presets"},{"level":3,"title":"Transformers","slug":"transformers"},{"level":2,"title":"选择 UnoCSS 原因","slug":"选择-unocss-原因"}],"relativePath":"docs/work/unocss.md","lastUpdated":1742176684231.0264}';var p={};const o=[a('<p><a href="https://unocss.dev/" target="_blank" rel="noopener noreferrer">Unocss</a> 是一个基于 Tailwind CSS 的工具 ，它通过静态分析 HTML 和 CSS 代码，自动消除未使用的样式，以减小生成的 CSS 文件大小。</p><p><a href="https://unocss.nodejs.cn/config/" target="_blank" rel="noopener noreferrer">Unocss 中文网</a></p><h2 id="基础安装"><a class="header-anchor" href="#基础安装" aria-hidden="true">#</a> 基础安装</h2><ol><li><p>安装 UnoCSS</p><p>首先，我们需要安装 UnoCSS：</p><div class="language-bash"><pre><code><span class="token function">npm</span> <span class="token function">install</span> unocss\n</code></pre></div></li><li><p>配置 UnoCSS</p><p>接下来，我们需要配置 UnoCSS。在项目根目录下创建 uno.config.js 文件，并进行如下配置：</p><div class="language-js"><pre><code><span class="token comment">// uno.config.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unocss&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// 在这里可以配置 UnoCSS 规则</span>\n  <span class="token literal-property property">shortcuts</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// shortcuts to multiple utilities</span>\n    <span class="token literal-property property">btn</span><span class="token operator">:</span> <span class="token string">&#39;py-2 px-4 font-semibold rounded-lg shadow-md&#39;</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&#39;btn-green&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text-white bg-green-500 hover:bg-green-700&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// single utility alias</span>\n    <span class="token literal-property property">red</span><span class="token operator">:</span> <span class="token string">&#39;text-red-100&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">&#39;bg-main&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">&#39;#409eff&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token string">&#39;text-white&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&#39;flex-between&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">&#39;flex&#39;</span><span class="token punctuation">,</span>\n        <span class="token string-property property">&#39;justify-content&#39;</span><span class="token operator">:</span> <span class="token string">&#39;space-between&#39;</span><span class="token punctuation">,</span>\n        <span class="token string-property property">&#39;align-items&#39;</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment">// 可以添加更多自定义规则</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div></li><li><p>在 Vite 项目中集成 UnoCSS</p><p>在 vite.config.js 中引入 UnoCSS 插件</p><div class="language-js"><pre><code><span class="token comment">// vite.config.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>\n<span class="token keyword">import</span> UnoCSS <span class="token keyword">from</span> <span class="token string">&#39;unocss/vite&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">UnoCSS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div></li><li><p>main.js 中引入 UnoCSS：</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;virtual:uno.css&#39;</span>\n</code></pre></div></li><li><p>使用 UnoCSS 编写样式</p></li></ol><p>UnoCss 提供了很多样式规则，我们又没办法都记住，作者很友好的提供了一个样式规则互动工具（<a href="https://unocss.dev/interactive/" target="_blank" rel="noopener noreferrer">unocss.dev/interactive</a>），支持通过类名和样式查找。</p><h2 id="更多配置"><a class="header-anchor" href="#更多配置" aria-hidden="true">#</a> 更多配置</h2><p>参考<a href="https://unocss.nodejs.cn/config/" target="_blank" rel="noopener noreferrer">https://unocss.nodejs.cn/config/</a> UnoCSS 提供了 presets 和 transformers 来增强和扩展其功能。</p><h3 id="presets"><a class="header-anchor" href="#presets" aria-hidden="true">#</a> Presets</h3><p>Presets 是预定义的一组规则和配置，用来快速设置和使用 UnoCSS。UnoCSS 内置了一些常用的预设，例如 Attributify 和 Icons。</p><p>在 uno.config.js 中配置 presets：</p><div class="language-js"><pre><code><span class="token comment">// uno.config.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> presetAttributify<span class="token punctuation">,</span> presetIcons<span class="token punctuation">,</span> presetUno <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unocss&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">presetUno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 默认预设</span>\n    <span class="token function">presetAttributify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// Attributify 预设</span>\n    <span class="token function">presetIcons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// Icons 预设</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h4 id="attributify-preset"><a class="header-anchor" href="#attributify-preset" aria-hidden="true">#</a> Attributify Preset</h4><p>允许通过属性来应用样式，类似于 Vue 的 :class 绑定</p><div class="language-vue"><pre><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-aside</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200px<span class="token punctuation">&quot;</span></span> <span class="token attr-name">font</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bold text=<span class="token punctuation">&quot;</span></span><span class="token attr-name">xl</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><ul><li>text=&quot;xl&quot; 等同于 class=&quot;text-xl&quot;</li><li>font=&quot;bold&quot; 等同于 class=&quot;font-bold&quot;</li></ul><h4 id="icons-preset"><a class="header-anchor" href="#icons-preset" aria-hidden="true">#</a> Icons Preset</h4><p>UnoCSS 提供的一个预设，允许使用 <a href="https://iconify.design/" target="_blank" rel="noopener noreferrer">iconify</a> 图标库中的图标作为类名来应用图标，<a href="https://icon-sets.iconify.design/" target="_blank" rel="noopener noreferrer">icons 列表</a></p><p><img src="/_assets/unocss-iconify-icons.ff685525.png" alt="unocss-iconify-icons"></p><ol><li>搜索想要的图标</li><li>点击后选择 UnoCSS</li><li>复制红框内的内容到页面即可</li></ol><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i-material-symbols:home w-1em h-1em<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>在 VSCode 中安装插件 Iconify IntelliSense，即可在代码中展示图标</p><p><img src="/_assets/unocss-iconify-vscode.308fbade.png" alt="unocss-iconify-vscode"></p><p>不仅可以使用上面 icon 列表提供的所有图标，并且可以自定义图标，如 iconfont 上的图标</p><div class="language-js"><pre><code><span class="token comment">// uno.config.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> presetIcons<span class="token punctuation">,</span> presetUno <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unocss&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">presets</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">presetUno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">presetIcons</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">collections</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 自定义图标库</span>\n        <span class="token literal-property property">custom</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">yongyan</span><span class="token operator">:</span>\n            <span class="token string">&#39;&lt;svg t=&quot;1718267214360&quot; class=&quot;icon&quot; viewBox=&quot;0 0 1024 1024&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; p-id=&quot;2815&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;path d=&quot;M659.655431 521.588015q23.970037-6.71161 46.022472-13.423221 19.17603-5.752809 39.310861-11.505618t33.558052-10.546816l-13.423221 50.816479q-5.752809 21.093633-10.546816 31.640449-9.588015 25.88764-22.531835 47.940075t-24.449438 38.35206q-13.423221 19.17603-27.805243 35.475655l-117.932584 35.475655 96.838951 17.258427q-19.17603 16.299625-41.228464 33.558052-19.17603 14.382022-43.625468 30.202247t-51.29588 29.243446-59.925094 13.902622-62.801498-4.314607q-34.516854-4.794007-69.033708-16.299625 10.546816-16.299625 23.011236-36.434457 10.546816-17.258427 25.40824-40.749064t31.161049-52.254682q46.022472-77.662921 89.168539-152.449438t77.662921-135.191011q39.310861-69.992509 75.745318-132.314607-45.06367 51.775281-94.921348 116.014981-43.146067 54.651685-95.88015 129.917603t-107.385768 164.434457q-11.505618 18.217228-25.88764 42.187266t-30.202247 50.816479-32.599251 55.131086-33.078652 55.131086q-38.35206 62.322097-78.621723 130.397004 0.958801-20.134831 7.670412-51.775281 5.752809-26.846442 19.17603-67.116105t38.35206-94.921348q16.299625-34.516854 24.928839-53.692884t13.423221-29.722846q4.794007-11.505618 7.670412-15.340824-4.794007-5.752809-1.917603-23.011236 1.917603-15.340824 11.026217-44.58427t31.161049-81.977528q22.052434-53.692884 58.007491-115.535581t81.018727-122.726592 97.797753-117.932584 107.865169-101.153558 110.262172-72.389513 106.906367-32.11985q0.958801 33.558052-6.71161 88.689139t-19.17603 117.932584-25.88764 127.520599-27.805243 117.453184z&quot; p-id=&quot;2816&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 自定义图标</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>上面配置中，我们定义了一个名为 custom 的图标库，并添加了图标：yongyan，接着在代码中就可以使用</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i-custom-yongyan w-1em h-1em<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>自定义图标集合的名称会成为类名前缀（如 <code>i-custom-</code>），需要确保命名空间唯一。</p><h3 id="transformers"><a class="header-anchor" href="#transformers" aria-hidden="true">#</a> Transformers</h3><p>Transformers 是在编译过程中执行的函数，可以用来修改生成的 CSS。例如，UnoCSS 提供了 transformerDirectives 来支持 CSS 指令。</p><ul><li>transformerDirectives: 允许在 CSS 中使用类似 @apply 的指令来应用 UnoCSS 类。</li></ul><div class="language-js"><pre><code><span class="token comment">// uno.config.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unocss&#39;</span>\n<span class="token keyword">import</span> transformerDirectives <span class="token keyword">from</span> <span class="token string">&#39;@unocss/transformer-directives&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">transformers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">transformerDirectives</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 支持 @apply 指令</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>在使用 UnoCSS 时，可以通过 @apply 指令将多个原子类应用到一个选择器上，这样可以更方便地管理和复用样式。</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.header</span> <span class="token punctuation">{</span>\n  <span class="token atrule"><span class="token rule">@apply</span> flex-between bg-main text-white p-4<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="选择-unocss-原因"><a class="header-anchor" href="#选择-unocss-原因" aria-hidden="true">#</a> 选择 UnoCSS 原因</h2><ol><li><strong>按需生成样式</strong>: UnoCSS 使用静态分析技术，只生成使用到的 CSS 样式。这意味着您无需手动管理和维护大量的样式文件，而只需编写实际需要的样式代码。这简化了样式管理，减少了样式冗余，并提高了开发效率。</li><li><strong>零运行时</strong>: UnoCSS 是在构建阶段处理的工具，不需要 JavaScript 运行时。这意味着生成的 CSS 不会增加额外的客户端计算负担，从而提高页面加载速度并改善用户体验。</li><li><strong>易于集成</strong>：UnoCSS 可以与现有的构建工具（如 webpack、Vite 等）和前端框架（如 Vue、React 等）无缝集成。它提供了插件和配置选项，使您可以轻松地与您的项目集成，并根据您的需求进行自定义。</li><li><strong>高性能和快速</strong>: UnoCSS 只生成使用到的样式，大大减少了 CSS 文件的大小，从而加快了页面加载速度。它还对样式表进行了优化，使其更紧凑和高效。</li><li><strong>开发者友好</strong>: UnoCSS 提供了简洁的 API 和一致的类名命名规则，使得样式编写更加直观和易于理解。它还提供了实时预览和自动补全等功能，提升了开发效率。</li></ol>',35)];p.render=function(a,t,p,e,c,l){return n(),s("div",null,o)};export{t as __pageData,p as default};
