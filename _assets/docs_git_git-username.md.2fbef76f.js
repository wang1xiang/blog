import{f as e,g as t,J as n}from"./common-03e46d7f.js";const a='{"title":"git奇淫技巧：如何修改commit历史记录的名字(我的github头像怎么没了😱)","frontmatter":{"date":"2023-07-05","title":"git奇淫技巧：如何修改commit历史记录的名字(我的github头像怎么没了😱)","tags":["git"],"describe":"git奇淫技巧：如何修改commit提交记录的名字"},"headers":[{"level":2,"title":"github 的头像不显示了？","slug":"github-的头像不显示了？"},{"level":2,"title":"产生原因","slug":"产生原因"},{"level":2,"title":"如何解决","slug":"如何解决"},{"level":3,"title":"使用 filter-branch 批量修改","slug":"使用-filter-branch-批量修改"},{"level":2,"title":"最后","slug":"最后"}],"relativePath":"docs/git/git-username.md","lastUpdated":1743558905395.9434}';var i={};const o=[n('<p><img src="/blog/_assets/gitlab-github-username.d4094af8.png" alt="gitlab-github-username.png"></p><h2 id="github-的头像不显示了？"><a class="header-anchor" href="#github-的头像不显示了？" aria-hidden="true">#</a> github 的头像不显示了？</h2><p><img src="/blog/_assets/github-error-usename.988128d4.png" alt="github-error-username"></p><p>如题，我的 github commit 记录里面头像不显示了。好奇怪，难道是我网络有问题吗？可是我已经开了最高速的翻墙了。定睛一看 👀，原来是 github 的用户名不对中间少了个<code>1</code>。</p><p>可恶，因为注册 github 比较晚，想注册的名字都被注册了，所以只能委屈在中间加个<code>1</code>。</p><p>不知道还有人遇过这个问题没，github 的 commit 记录用户名不对，导致头像也不能正确显示出来，提交了很多，却一直没有 contributions。</p><h2 id="产生原因"><a class="header-anchor" href="#产生原因" aria-hidden="true">#</a> 产生原因</h2><p>通过<code>git config --global -l</code>查看全局配置，不知道什么时候被我改成了<code>wangxiang</code>，和 github 的用户名没对应上，所以导致提交到 github 上的 commit 记录都出现了问题。</p><p><img src="/blog/_assets/github-global-usename.fc3698a2.png" alt="github-global-username"></p><p>大家都知道，git 的配置文件可以是全局和当前项目，如果当前项目没有配置个人信息，那提交代码时就会拿全局配置的信息。</p><div class="language-bash"><pre><code><span class="token comment"># 配置全局级别的config</span>\n<span class="token function">git</span> config --global user.name <span class="token string">&#39;注册名&#39;</span>\n<span class="token function">git</span> config --global user.email <span class="token string">&#39;注册邮箱&#39;</span>\n</code></pre></div><div class="language-bash"><pre><code><span class="token comment"># 配置项目级别的config</span>\n<span class="token function">git</span> config --local user.name <span class="token string">&#39;注册名&#39;</span>\n<span class="token function">git</span> config --local user.email <span class="token string">&#39;注册邮箱&#39;</span>\n</code></pre></div><h2 id="如何解决"><a class="header-anchor" href="#如何解决" aria-hidden="true">#</a> 如何解决</h2><p>如果读过我这篇文章<a href="https://juejin.cn/post/7228869305549537336#heading-5" target="_blank" rel="noopener noreferrer">add、commit...👀git 就会这几个操作吗？进来学点新姿势～</a>的小伙伴，应该都知道可以使用<code>amend</code>来修改提交信息（PS：如果没看过建议学一波，干货满满 👍）。</p><p>之前使用<code>amend</code>仅仅只是对提交信息和文件进行修改，而这里，我们就可以用它来对提交<strong>作者信息进行修改</strong>，命令格式如下：</p><div class="language-bash"><pre><code><span class="token function">git</span> commit --amend --author<span class="token operator">=</span><span class="token string">&quot;{username} &lt;{email}&gt;&quot;</span> --no-edit\n</code></pre></div><p>比如我这里提交到公司 gitlab 上的代码，提交信息显示的名字与之前的不统一：</p><p><img src="/blog/_assets/git-commit-amend.dbde6b40.png" alt="git-commit-amend.png"></p><p>这时候就可以用上述命令来修改，比如修改为名称：<code>王翔</code>、邮箱：<code>wangxiang@qimingpian.com</code>：</p><div class="language-bash"><pre><code><span class="token function">git</span> commit --amend --author<span class="token operator">=</span><span class="token string">&quot;王翔 &lt;wangxiang@qimingpian.com&gt;&quot;</span> --no-edit\n</code></pre></div><p><img src="/blog/_assets/git-commit-amend1.e123acf1.png" alt="git-commit-amend1.png"></p><p>这样就成功修改了提交记录的提交人信息。</p><p>如果已经修改了 git config 中的用户名和邮箱，也可以使用：</p><div class="language-bash"><pre><code><span class="token function">git</span> commit --amend --reset-author --no-edit\n</code></pre></div><p><strong>注意：如果已经提交到远程，修改完成后，需要使用<code>git push -f</code>。</strong></p><p>但<code>amend</code>只支持<strong>修改最近一次的提交</strong>，要是像我一样之前的提交名字都错了，那要怎么改呢？🤔</p><h3 id="使用-filter-branch-批量修改"><a class="header-anchor" href="#使用-filter-branch-批量修改" aria-hidden="true">#</a> 使用 filter-branch 批量修改</h3><p><code>filter-branch</code>是什么呢？这里我们可以通过<a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E9%87%8D%E5%86%99%E5%8E%86%E5%8F%B2#_%E6%A0%B8%E6%AD%A6%E5%99%A8%E7%BA%A7%E9%80%89%E9%A1%B9filter_branch" target="_blank" rel="noopener noreferrer">官方文档</a>知道，它主要用来<strong>批量修改 git 历史记录</strong>，这不正合我意嘛！</p><p>我们看下<code>filter-branch</code>可以用来做什么：</p><ol><li>从每一个提交中移除一个文件；</li><li>全局修改邮箱地址；</li><li>使一个子目录做为新的根目录。</li></ol><p>我这里用官方提供的代码来做个例子，比如我这个项目的提交名字和邮箱和 github 对不上，通过<a href="https://juejin.cn/post/7228869305549537336#heading-11" target="_blank" rel="noopener noreferrer">git logs</a>查看提交记录:</p><p><img src="/blog/_assets/git-filter-logs.2761e5fa.png" alt="git-filter-logs"></p><p>接着使用<code>--commit-filter</code>批量修改，步骤如下：</p><ol><li><p>在项目根目录下创建<code>changeCommit.sh</code>：</p><div class="language-bash"><pre><code>  <span class="token comment"># changeCommit.sh</span>\n  <span class="token function">git</span> filter-branch --commit-filter <span class="token string">&#39;\n    if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;wangxiang@qimingpian.com&quot; ];\n    then\n            GIT_AUTHOR_NAME=&quot;wang1xiang&quot;;\n            GIT_AUTHOR_EMAIL=&quot;756638369@qq.com&quot;;\n            git commit-tree &quot;$@&quot;;\n    else\n            git commit-tree &quot;$@&quot;;\n    fi&#39;</span> HEAD\n</code></pre></div><p>这个脚本很简单，只要符合<code>&quot;$GIT_AUTHOR_EMAIL&quot; = &quot;wangxiang@qimingpian.com&quot;</code>的提交，就把<code>GIT_AUTHOR_NAME</code>改为<code>wang1xiang</code>，<code>GIT_AUTHOR_EMAIL</code>改为<code>756638369@qq.com</code>。</p></li><li><p>执行此脚本，过程略微有点慢</p><p>.<img src="/blog/_assets/git-filter-branch.75112d43.png" alt="git-filter-branch.png"></p><p>执行完成后，展示成上图这样说明执行成功，</p><p>如果执行时提示<code>A previous backup already exists in refs/original/</code>，说明已经执行过一次，使用以下命令解决：</p><div class="language-bash"><pre><code><span class="token function">git</span> filter-branch -f --index-filter <span class="token string">&#39;git rm --cached --ignore-unmatch Rakefile&#39;</span> HEAD\n\n</code></pre></div><p><img src="/blog/_assets/git-filter-branch-error.75f644d1.png" alt="git-filter-branch-error"></p></li><li><p>执行完成后，通过<a href="https://juejin.cn/post/7228869305549537336#heading-11" target="_blank" rel="noopener noreferrer">git logs</a>再次查看：</p><p><img src="/blog/_assets/git-filter-logs1.e93174ef.png" alt="git-filter-logs1.png"></p></li></ol><p>最后，在<code>git push -f</code>就大功告成了 🎉！，再看下 github 的 commit 历史，不错，头像都出来了。 <img src="/blog/_assets/github-right-usename.6cccb6f8.png" alt="github-right-usename"></p><h2 id="最后"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2><p>本文主要讲了修改 git 提交记录中用户名和邮箱的两种方式，这可能是很多人都不会接触到的东西，所以我才会称它为“奇淫技巧”，但在有些情况下（比如我遇到的问题）还是挺有效的。如果觉得现在对你没用的话，先收藏，没准什么时候就用上了。</p><p>以上就是本文的全部内容，希望这篇文章对你有所帮助，欢迎点赞和收藏 🙏，如果发现有什么错误或者更好的解决方案及建议，欢迎随时联系。</p>',38)];i.render=function(n,a,i,s,g,c){return e(),t("div",null,o)};export{a as __pageData,i as default};
