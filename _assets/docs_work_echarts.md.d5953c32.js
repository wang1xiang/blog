import{f as n,g as s,J as a}from"./common-03e46d7f.js";const t='{"title":"vue3 项目使用Echarts使用记录","frontmatter":{"date":"2024-07-10","title":"vue3 项目使用Echarts使用记录","tags":["work"],"describe":"Echarts使用记录"},"headers":[{"level":2,"title":"按需引入 ECharts 图表和组件","slug":"按需引入-echarts-图表和组件"},{"level":2,"title":"组件封装","slug":"组件封装"},{"level":3,"title":"Hooks","slug":"hooks"},{"level":3,"title":"组件","slug":"组件"},{"level":3,"title":"使用","slug":"使用"}],"relativePath":"docs/work/echarts.md","lastUpdated":1742176684077.0273}';var p={};const o=[a('<h2 id="按需引入-echarts-图表和组件"><a class="header-anchor" href="#按需引入-echarts-图表和组件" aria-hidden="true">#</a> 按需引入 ECharts 图表和组件</h2><p>项目中只需要使用 ECharts 中的柱状图、折线图和饼图等基本图表类型，全量引入过大。考虑使用按需引入的方式，仅导入我们用到的图表组件：</p><ol><li><p>添加 echarts 依赖</p><div class="language-bash"><pre><code><span class="token function">npm</span> <span class="token function">install</span> echarts --save\n</code></pre></div></li><li><p>生成 echarts.js 文件，按需加载的文件</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> echarts <span class="token keyword">from</span> <span class="token string">&#39;echarts/core&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BarChart<span class="token punctuation">,</span> LineChart<span class="token punctuation">,</span> PieChart <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/charts&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  TitleComponent<span class="token punctuation">,</span>\n  TooltipComponent<span class="token punctuation">,</span>\n  GridComponent<span class="token punctuation">,</span>\n  <span class="token comment">// 数据集组件</span>\n  DatasetComponent<span class="token punctuation">,</span>\n  <span class="token comment">// 内置数据转换器组件 (filter, sort)</span>\n  TransformComponent<span class="token punctuation">,</span>\n  <span class="token comment">// legend图例</span>\n  LegendComponent<span class="token punctuation">,</span>\n  <span class="token comment">// 工具栏。内置有导出图片，数据视图，动态类型切换，数据区域缩放，重置五个工具。</span>\n  ToolboxComponent<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/components&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> LabelLayout<span class="token punctuation">,</span> UniversalTransition <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/features&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CanvasRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/renderers&#39;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span>\n  <span class="token comment">// 系列类型的定义后缀都为 SeriesOption</span>\n  BarSeriesOption<span class="token punctuation">,</span>\n  LineSeriesOption<span class="token punctuation">,</span>\n  PieSeriesOption<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/charts&#39;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span>\n  <span class="token comment">// 组件类型的定义后缀都为 ComponentOption</span>\n  TitleComponentOption<span class="token punctuation">,</span>\n  TooltipComponentOption<span class="token punctuation">,</span>\n  GridComponentOption<span class="token punctuation">,</span>\n  DatasetComponentOption<span class="token punctuation">,</span>\n  LegendComponentOption<span class="token punctuation">,</span>\n  ToolboxComponentOption<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/components&#39;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> ComposeOption <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/core&#39;</span>\n\n<span class="token comment">// 通过 ComposeOption 来组合出一个只有必须组件和图表的 Option 类型</span>\n<span class="token keyword">export</span> type ECOption <span class="token operator">=</span> ComposeOption<span class="token operator">&lt;</span>\n  <span class="token operator">|</span> BarSeriesOption\n  <span class="token operator">|</span> LineSeriesOption\n  <span class="token operator">|</span> PieSeriesOption\n  <span class="token operator">|</span> TitleComponentOption\n  <span class="token operator">|</span> LegendComponentOption\n  <span class="token operator">|</span> ToolboxComponentOption\n  <span class="token operator">|</span> TooltipComponentOption\n  <span class="token operator">|</span> GridComponentOption\n  <span class="token operator">|</span> DatasetComponentOption\n<span class="token operator">&gt;</span>\n\n<span class="token comment">// 注册必须的组件</span>\necharts<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  TitleComponent<span class="token punctuation">,</span>\n  LegendComponent<span class="token punctuation">,</span>\n  ToolboxComponent<span class="token punctuation">,</span>\n  TooltipComponent<span class="token punctuation">,</span>\n  GridComponent<span class="token punctuation">,</span>\n  DatasetComponent<span class="token punctuation">,</span>\n  TransformComponent<span class="token punctuation">,</span>\n  BarChart<span class="token punctuation">,</span>\n  LineChart<span class="token punctuation">,</span>\n  PieChart<span class="token punctuation">,</span>\n  LabelLayout<span class="token punctuation">,</span>\n  UniversalTransition<span class="token punctuation">,</span>\n  CanvasRenderer<span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span> echarts <span class="token punctuation">}</span>\n</code></pre></div><p>这样在 vue 文件中需要使用 ECharts 时可以直接引入封装好的 echarts.ts ，当增加了新的图表类型（如雷达图、热力图、桑基图等）时直接修改 echarts.ts 文件就可以，提高使用按需引入的便捷性</p></li></ol><h2 id="组件封装"><a class="header-anchor" href="#组件封装" aria-hidden="true">#</a> 组件封装</h2><h3 id="hooks"><a class="header-anchor" href="#hooks" aria-hidden="true">#</a> Hooks</h3><p>封装一个统一的 useEChart Hook 函数，主要功能：</p><ol><li>统一绘制图表方法</li><li>监听 props 变化，重新绘制</li><li>监听 resize 变化，执行 resize 事件</li><li>修改默认图表颜色，用 Antv G2 的配色方案（没话说，就是好看 😄）</li><li>函数接收 customOptions 修改默认配置，这样方便所有图表共同使用</li></ol><div class="language-js"><pre><code><span class="token keyword">import</span> type <span class="token punctuation">{</span> ShallowRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> debounce <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> EChartsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/types/dist/core&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> type ECOption<span class="token punctuation">,</span> echarts <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/echarts&#39;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span>\n  DataZoomComponentOption<span class="token punctuation">,</span>\n  LegendComponentOption<span class="token punctuation">,</span>\n  LineSeriesOption<span class="token punctuation">,</span>\n  XAXisOption<span class="token punctuation">,</span>\n  YAXisOption<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/types/dist/shared&#39;</span>\n<span class="token comment">/** category 默认配色 来源：https://github.com/antvis/G2/blob/v5/src/theme/light.ts */</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">CATEGORY_COLORS</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">&#39;#1783FF&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#F0884D&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#D580FF&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#7863FF&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#60C42D&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#BD8F24&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#FF80CA&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#2491B3&#39;</span><span class="token punctuation">,</span>\n  <span class="token string">&#39;#17C76F&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">useChart</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> customOptions<span class="token operator">?</span><span class="token operator">:</span> ECOption</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">/** 所有图表的默认配置 */</span>\n  <span class="token keyword">const</span> <span class="token constant">DEFAULT_OPTIONS</span><span class="token operator">:</span> ECOption <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">series</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;数量&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;line&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">emphasis</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">focus</span><span class="token operator">:</span> <span class="token string">&#39;self&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;inside&#39;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> props<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">xAxis</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;category&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">axisTick</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> props<span class="token punctuation">.</span>xAxisData<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">yAxis</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">minInterval</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">legend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">orient</span><span class="token operator">:</span> <span class="token string">&#39;horizontal&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// 要渲染的Dom元素</span>\n  <span class="token keyword">const</span> <span class="token literal-property property">chartDom</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span>HTMLDivElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n  <span class="token comment">// 渲染的chart对象要用shallowRef</span>\n  <span class="token keyword">const</span> <span class="token literal-property property">chart</span><span class="token operator">:</span> ShallowRef<span class="token operator">&lt;</span>EChartsType <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">shallowRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">const</span> getHeight <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">typeof</span> props<span class="token punctuation">.</span>height <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>height<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> props<span class="token punctuation">.</span>height\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">,</span> drawChart<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 绘制</span>\n  <span class="token keyword">function</span> <span class="token function">drawChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">getSingleOption</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n      props<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">?</span> props<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">:</span> customOptions<span class="token operator">?.</span><span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token constant">DEFAULT_OPTIONS</span><span class="token punctuation">[</span>type<span class="token punctuation">]</span>\n\n    <span class="token keyword">const</span> <span class="token literal-property property">series</span><span class="token operator">:</span> LineSeriesOption<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getSingleOption</span><span class="token punctuation">(</span><span class="token string">&#39;series&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token literal-property property">xAxis</span><span class="token operator">:</span> XAXisOption<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getSingleOption</span><span class="token punctuation">(</span><span class="token string">&#39;xAxis&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token literal-property property">yAxis</span><span class="token operator">:</span> YAXisOption<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getSingleOption</span><span class="token punctuation">(</span><span class="token string">&#39;yAxis&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token literal-property property">legend</span><span class="token operator">:</span> LegendComponentOption <span class="token operator">=</span> <span class="token function">getSingleOption</span><span class="token punctuation">(</span><span class="token string">&#39;legend&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token literal-property property">dataZoom</span><span class="token operator">:</span> DataZoomComponentOption<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getSingleOption</span><span class="token punctuation">(</span><span class="token string">&#39;dataZoom&#39;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> ECOption <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token comment">// category自定义颜色</span>\n      <span class="token comment">// https://echarts.apache.org/zh/option.html#color</span>\n      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token constant">CATEGORY_COLORS</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;transparent&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">tooltip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&#39;axis&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">axisPointer</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;shadow&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      legend<span class="token punctuation">,</span>\n      <span class="token literal-property property">grid</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">bottom</span><span class="token operator">:</span> props<span class="token punctuation">.</span>dataZoom <span class="token operator">?</span> <span class="token number">40</span> <span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">containLabel</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 右上角工具栏</span>\n      <span class="token literal-property property">toolbox</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">feature</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">magicType</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;line&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">dataView</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">readOnly</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">saveAsImage</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataset</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">source</span><span class="token operator">:</span> props<span class="token punctuation">.</span>datasetSource<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      xAxis<span class="token punctuation">,</span>\n      yAxis<span class="token punctuation">,</span>\n      dataZoom<span class="token punctuation">,</span>\n      series<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 开启notMerge保证配置数据不会叠加</span>\n    chart<span class="token punctuation">.</span>value<span class="token operator">?.</span><span class="token function">setOption</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">notMerge</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 使用防抖debounce函数，减少resize的次数</span>\n  <span class="token keyword">const</span> chartResizeHandler <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> chart<span class="token punctuation">.</span>value<span class="token operator">?.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>\n  <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> chartResizeHandler<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token function">onBeforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n    window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> chartResizeHandler<span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n\n  <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    chart<span class="token punctuation">.</span>value <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>chartDom<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n    <span class="token function">drawChart</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    chartDom<span class="token punctuation">,</span>\n    getHeight<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="组件"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h3><div class="language-vue"><pre><code>// BarChart.vue\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chartDom<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ height: getHeight }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> type <span class="token punctuation">{</span>\n  BarSeriesOption<span class="token punctuation">,</span>\n  DataZoomComponentOption<span class="token punctuation">,</span>\n  LegendComponentOption<span class="token punctuation">,</span>\n  XAXisOption<span class="token punctuation">,</span>\n  YAXisOption<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/types/dist/shared&#39;</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">withDefaults</span><span class="token punctuation">(</span>\n  defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span>\n    <span class="token comment">/** 数据 */</span>\n    data<span class="token operator">?</span><span class="token operator">:</span> string <span class="token operator">|</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token comment">/** x轴数据 */</span>\n    xAxisData<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token comment">/** 系列配置 */</span>\n    series<span class="token operator">?</span><span class="token operator">:</span> BarSeriesOption<span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token comment">/** x轴配置 */</span>\n    xAxis<span class="token operator">?</span><span class="token operator">:</span> XAXisOption<span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token comment">/** y轴配置 */</span>\n    yAxis<span class="token operator">?</span><span class="token operator">:</span> YAXisOption<span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token comment">/** 图例配置 */</span>\n    legend<span class="token operator">?</span><span class="token operator">:</span> LegendComponentOption\n    <span class="token comment">/** 区域缩放配置 */</span>\n    dataZoom<span class="token operator">?</span><span class="token operator">:</span> DataZoomComponentOption<span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token comment">/** 图形高度 */</span>\n    height<span class="token operator">?</span><span class="token operator">:</span> number <span class="token operator">|</span> string\n    <span class="token comment">/** 数据集 */</span>\n    datasetSource<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">xAxisData</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> getHeight<span class="token punctuation">,</span> chartDom <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useEChart</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-vue"><pre><code>// PieChart.vue\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chartDom<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ height: getHeight }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> type <span class="token punctuation">{</span>\n  DataZoomComponentOption<span class="token punctuation">,</span>\n  LegendComponentOption<span class="token punctuation">,</span>\n  PieSeriesOption<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;echarts/types/dist/shared&#39;</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span> ECOption <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/echarts&#39;</span>\n\n<span class="token keyword">const</span> <span class="token constant">DEFAULT_OPTIONS</span><span class="token operator">:</span> ECOption <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">tooltip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&#39;item&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">legend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">orient</span><span class="token operator">:</span> <span class="token string">&#39;vertical&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">withDefaults</span><span class="token punctuation">(</span>\n  defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span>\n    <span class="token comment">/** 数据 */</span>\n    data<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span> value<span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token comment">/** 系列配置 */</span>\n    series<span class="token operator">?</span><span class="token operator">:</span> PieSeriesOption<span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token comment">/** 图例配置 */</span>\n    legend<span class="token operator">?</span><span class="token operator">:</span> LegendComponentOption\n    <span class="token comment">/** 区域缩放配置 */</span>\n    dataZoom<span class="token operator">?</span><span class="token operator">:</span> DataZoomComponentOption<span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token comment">/** 图形高度 */</span>\n    height<span class="token operator">?</span><span class="token operator">:</span> number <span class="token operator">|</span> string\n    <span class="token comment">/** 数据集 */</span>\n    datasetSource<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> chartDom<span class="token punctuation">,</span> getHeight <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useEChart</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> <span class="token constant">DEFAULT_OPTIONS</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>扇形图默认的配置与 useEChart hooks 中提供的默认配置不通用，通过传入 DEFAULT_OPTIONS 传入扇形图的默认配置</p><h3 id="使用"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pie-chart</span>\n  <span class="token attr-name">:height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:x-axis</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[{ type: <span class="token punctuation">&#39;</span>category<span class="token punctuation">&#39;</span> }]<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:dataset-source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataset<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:series</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pieSeries<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">/&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>line-chart</span>\n  <span class="token attr-name">:height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:x-axis</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[{ type: <span class="token punctuation">&#39;</span>category<span class="token punctuation">&#39;</span> }]<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:dataset-source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataset<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:series</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lineSeries<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">/&gt;</span></span>\n</code></pre></div>',14)];p.render=function(a,t,p,e,c,l){return n(),s("div",null,o)};export{t as __pageData,p as default};
