import{f as n,g as s,J as a}from"./common-03e46d7f.js";const p='{"title":"使用plop快速创建express mvc模板代码","frontmatter":{"date":"2024-06-19","title":"使用plop快速创建express mvc模板代码","tags":["work"],"describe":"使用plop快速创建express mvc模板代码"},"headers":[{"level":2,"title":"1. 安装 plop","slug":"_1-安装-plop"},{"level":2,"title":"2. 创建 Plop 配置文件","slug":"_2-创建-plop-配置文件"},{"level":2,"title":"3. 创建模板文件","slug":"_3-创建模板文件"},{"level":2,"title":"4. 配置 package.json","slug":"_4-配置-package-json"}],"relativePath":"docs/work/plop-express.md","lastUpdated":1743134641515.3196}';var t={};const o=[a('<p>我们可以设置 Plop 来生成 /routes/xx, /controllers/xx, 和 /models/xx 文件，提供工作效率。</p><h2 id="_1-安装-plop"><a class="header-anchor" href="#_1-安装-plop" aria-hidden="true">#</a> 1. 安装 plop</h2><div class="language-bash"><pre><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev plop\n</code></pre></div><h2 id="_2-创建-plop-配置文件"><a class="header-anchor" href="#_2-创建-plop-配置文件" aria-hidden="true">#</a> 2. 创建 Plop 配置文件</h2><p>在项目根目录下创建一个 plopfile.js 文件：</p><p>为了在 Plop 生成文件时将文件名或类名的首字母大写，我们可以使用 Handlebars 的自定义 helper 函数来处理模板中的名称。</p><p>在模板文件中，也可以使用这个自定义 helper 来生成类名或函数名的首字母大写。</p><div class="language-js"><pre><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 添加首字母大写的自定义 helper 可以对传入参数进行处理 用法{{ capitalize name }}</span>\n  plop<span class="token punctuation">.</span><span class="token function">setHelper</span><span class="token punctuation">(</span>\n    <span class="token string">&#39;capitalize&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> text<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> text<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n  <span class="token comment">// mvc generator</span>\n  plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">&#39;mvc&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;Create a mvc template&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">prompts</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;模块名称:&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;route&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;路由前缀:&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;src/routes/{{name}}/index.js&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/router.hbs&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;src/controllers/{{name}}Controller.js&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/controller.hbs&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;src/models/{{name}}Model.js&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/model.hbs&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// pattern正则表达式 用它来匹配目标文件追加的位置</span>\n      <span class="token comment">// template后面需添加$1，$1是pattern正则括号内匹配到的字符串，当发生替换时，占位符会连同模板文本一起替换掉目标文件中的占位符，所以这个占位符会一直存在于目标文件中，方便后续的追加</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;modify&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;src/routes/index.js&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">pattern</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\/\\/ 路由引入 不要删除此行注释)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&quot;import {{name}} from &#39;./{{name}}&#39;\\r$1&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;modify&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;src/routes/index.js&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">pattern</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\/\\/ 注册路由 不要删除此行注释)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&quot;router.use(&#39;/{{route}}&#39;, authMiddleware, {{name}})\\r$1&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="_3-创建模板文件"><a class="header-anchor" href="#_3-创建模板文件" aria-hidden="true">#</a> 3. 创建模板文件</h2><p>在项目根目录下创建一个 plop-templates 文件夹，并在其中创建三个模板文件：</p><p>plop-templates/controller.hbs</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>capitalize name<span class="token punctuation">}</span><span class="token punctuation">}</span>Model <span class="token keyword">from</span> <span class="token string">&#39;@/models/{{name}}Model.js&#39;</span>\n\n<span class="token comment">// test</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">test</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>capitalize name<span class="token punctuation">}</span><span class="token punctuation">}</span>Model<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> err<span class="token punctuation">.</span>message <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>plop-templates/router.hbs</p><div class="language-js"><pre><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>capitalize name<span class="token punctuation">}</span><span class="token punctuation">}</span>Controller <span class="token keyword">from</span> <span class="token string">&#39;@/controllers/{{name}}Controller.js&#39;</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">//  {{name}}路由</span>\nrouter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>capitalize name<span class="token punctuation">}</span><span class="token punctuation">}</span>Controller<span class="token punctuation">.</span>test<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> router\n</code></pre></div><p>plop-templates/model.hbs</p><div class="language-js"><pre><code><span class="token keyword">import</span> pool <span class="token keyword">from</span> <span class="token string">&#39;@/config/database.js&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>capitalize name<span class="token punctuation">}</span><span class="token punctuation">}</span>Model <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token keyword">async</span> <span class="token function">test</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> client <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> connection\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      connection <span class="token operator">=</span> <span class="token keyword">await</span> pool<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token string">&#39;SELECT COUNT(*) AS count FROM user_count&#39;</span>\n      <span class="token keyword">const</span> <span class="token punctuation">[</span>rows<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> params<span class="token punctuation">)</span>\n      <span class="token keyword">return</span> rows\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">throw</span> error\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>connection<span class="token punctuation">)</span> connection<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>capitalize name<span class="token punctuation">}</span><span class="token punctuation">}</span>Model\n</code></pre></div><h2 id="_4-配置-package-json"><a class="header-anchor" href="#_4-配置-package-json" aria-hidden="true">#</a> 4. 配置 package.json</h2><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  ...\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    ...\n    <span class="token property">&quot;mvc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;plop mvc&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  ...\n<span class="token punctuation">}</span>\n</code></pre></div><p>执行 <code>yarn mvc</code></p><div class="language-bash"><pre><code><span class="token function">yarn</span> mvc\n$ plop mvc\n? 模块名称: oneIdManage\n? 路由前缀: oneId\n✔  ++ /src/routes/oneIdManage/index.js\n✔  ++ /src/controllers/oneIdManageController.js\n✔  ++ /src/models/oneIdManageModel.js\n✔  +- /src/routes/index.js\n✔  +- /src/routes/index.js\n✨  Done <span class="token keyword">in</span> <span class="token number">6</span>.22s.\n</code></pre></div>',20)];t.render=function(a,p,t,e,c,l){return n(),s("div",null,o)};export{p as __pageData,t as default};
