import{f as n,g as s,J as a}from"./common-03e46d7f.js";const p='{"title":"js监听当前页面是否活跃/失活","frontmatter":{"date":"2023-10-12","title":"js监听当前页面是否活跃/失活","tags":["javascript"],"describe":"js监听当前页面是否活跃/失活"},"relativePath":"docs/javascript/page-alive.md","lastUpdated":1743400722725.411}';var t={};const o=[a('<ol><li>window.addEventListener(&#39;focus/blur&#39;, ...)</li><li>window.addEventListener(&#39;visibilitychange&#39;, ...) a. 回调中使用 <code>document.hidden</code>或<code>document.visibilityState</code>属性检测页面可见性 b. 兼容性不好，需要<code>pagehide</code>辅助</li></ol><p><strong>差异：</strong> 在移动设备上，管理标签（如下图）时，focus &amp; blur 认为已经 blur 了，visibilitychange 认为还是活跃的</p><p><img src="/blog/_assets/page-alive.ac92db24.png" alt="page-alive"></p><p>在 MAC 上，合盖后无法触发 visibilitychange，会在下次打开电脑后快速的触发 2 次 visibilitychange（一次为失活，一次为重新活跃），focus &amp; blur 就没有这个问题</p><div class="language-js"><pre><code><span class="token comment">// visibilitychange</span>\n<span class="token keyword">const</span> <span class="token function-variable function">emptyCb</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">PageVisibilityChangeListener</span> <span class="token punctuation">{</span>\n  <span class="token keyword">private</span> <span class="token literal-property property">eventsMap</span><span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">CB</span><span class="token punctuation">,</span> <span class="token constant">CB</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">CB</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">private</span> <span class="token function-variable function">listenerFn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">visibleCb</span><span class="token operator">:</span> <span class="token constant">CB</span><span class="token punctuation">,</span> <span class="token literal-property property">hiddenCb</span><span class="token operator">:</span> <span class="token constant">CB</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">CB</span>\n  <span class="token keyword">private</span> <span class="token literal-property property">visibilityChangeEventName</span><span class="token operator">:</span> string\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> hiddenProperty <span class="token operator">=</span>\n      <span class="token string">&#39;hidden&#39;</span> <span class="token keyword">in</span> document\n        <span class="token operator">?</span> <span class="token string">&#39;hidden&#39;</span>\n        <span class="token operator">:</span> <span class="token string">&#39;webkitHidden&#39;</span> <span class="token keyword">in</span> document\n        <span class="token operator">?</span> <span class="token string">&#39;webkitHidden&#39;</span>\n        <span class="token operator">:</span> <span class="token string">&#39;mozHidden&#39;</span> <span class="token keyword">in</span> document\n        <span class="token operator">?</span> <span class="token string">&#39;mozHidden&#39;</span>\n        <span class="token operator">:</span> <span class="token keyword">null</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>visibilityChangeEventName <span class="token operator">=</span> hiddenProperty<span class="token operator">?.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hidden</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">&#39;visibilitychange&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hiddenProperty<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面激活状态监听失败&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">let</span> lastTime <span class="token operator">=</span> <span class="token number">0</span>\n    <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token number">0</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">listenerFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">visibleCb</span><span class="token operator">:</span> <span class="token constant">CB</span><span class="token punctuation">,</span> <span class="token literal-property property">hiddenCb</span><span class="token operator">:</span> <span class="token constant">CB</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">-</span> lastTime <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>\n        lastTime <span class="token operator">=</span> t\n        <span class="token keyword">return</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">===</span> <span class="token string">&#39;visible&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// @ts-ignore</span>\n        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">visibleCb</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">===</span> <span class="token string">&#39;hidden&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// @ts-ignore</span>\n        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">hiddenCb</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n      lastTime <span class="token operator">=</span> t\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">on</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">visibleCb</span><span class="token operator">:</span> <span class="token constant">CB</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">hiddenCb</span><span class="token operator">:</span> <span class="token constant">CB</span> <span class="token operator">|</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>visibilityChangeEventName <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token operator">!</span>visibleCb <span class="token operator">&amp;</span>amp<span class="token punctuation">;</span><span class="token operator">&amp;</span>amp<span class="token punctuation">;</span> <span class="token operator">!</span>hiddenCb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\n    visibleCb <span class="token operator">=</span> visibleCb <span class="token operator">||</span> emptyCb\n    hiddenCb <span class="token operator">=</span> hiddenCb <span class="token operator">||</span> emptyCb\n    <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">listenerFn</span><span class="token punctuation">(</span>visibleCb<span class="token punctuation">,</span> hiddenCb<span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>eventsMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span>visibleCb<span class="token punctuation">,</span> hiddenCb<span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span>\n    listener<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>visibilityChangeEventName<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">off</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">visibleCb</span><span class="token operator">:</span> <span class="token constant">CB</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">hiddenCb</span><span class="token operator">:</span> <span class="token constant">CB</span> <span class="token operator">|</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>visibilityChangeEventName <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token operator">!</span>visibleCb <span class="token operator">&amp;</span>amp<span class="token punctuation">;</span><span class="token operator">&amp;</span>amp<span class="token punctuation">;</span> <span class="token operator">!</span>hiddenCb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\n    visibleCb <span class="token operator">=</span> visibleCb <span class="token operator">||</span> emptyCb\n    hiddenCb <span class="token operator">=</span> hiddenCb <span class="token operator">||</span> emptyCb\n    <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span>visibleCb<span class="token punctuation">,</span> hiddenCb<span class="token punctuation">]</span><span class="token punctuation">)</span>\n    fn <span class="token operator">&amp;</span>amp<span class="token punctuation">;</span><span class="token operator">&amp;</span>amp<span class="token punctuation">;</span> listener<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>visibilityChangeEventName<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/** 监听页面失活 */</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> pageVisibilityChangeListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageVisibilityChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\npageVisibilityChangeListener<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面复活&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面失活&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n</code></pre></div><div class="language-js"><pre><code><span class="token comment">// focus &amp;amp; blur</span>\n<span class="token keyword">class</span> <span class="token class-name">PageVisibilityChangeListener</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token function">on</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">visibleCb</span><span class="token operator">:</span> <span class="token constant">CB</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">hiddenCb</span><span class="token operator">:</span> <span class="token constant">CB</span> <span class="token operator">|</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>visibleCb<span class="token punctuation">)</span> listener<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;focus&#39;</span><span class="token punctuation">,</span> visibleCb<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>hiddenCb<span class="token punctuation">)</span> listener<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;blur&#39;</span><span class="token punctuation">,</span> hiddenCb<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">off</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">visibleCb</span><span class="token operator">:</span> <span class="token constant">CB</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">hiddenCb</span><span class="token operator">:</span> <span class="token constant">CB</span> <span class="token operator">|</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>visibleCb<span class="token punctuation">)</span> listener<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;focus&#39;</span><span class="token punctuation">,</span> visibleCb<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>hiddenCb<span class="token punctuation">)</span> listener<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;blur&#39;</span><span class="token punctuation">,</span> hiddenCb<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/** 监听页面失活 */</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> pageVisibilityChangeListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageVisibilityChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\npageVisibilityChangeListener<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面聚焦&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面失焦&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n</code></pre></div>',6)];t.render=function(a,p,t,e,c,l){return n(),s("div",null,o)};export{p as __pageData,t as default};
