import{f as n,g as s,J as a}from"./common-03e46d7f.js";const p='{"title":"vite 批量导入图片","frontmatter":{"date":"2024-05-15","title":"vite 批量导入图片","tags":["vite"],"describe":"vite 批量导入图片"},"headers":[{"level":2,"title":"场景","slug":"场景"},{"level":2,"title":"导入方案","slug":"导入方案"},{"level":3,"title":"webpack 导入方案","slug":"webpack-导入方案"}],"relativePath":"docs/vite/vite-mulit-import.md","lastUpdated":1743134641219.317}';var t={};const e=[a('<h2 id="场景"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h2><p>有很多城市的图片</p><p><img src="/blog/_assets/mulit-images.ceeef8f0.png" alt="mulit-images"></p><p>需要在一个列表中统一渲染：</p><p><img src="/blog/_assets/mulit-images-render.5608c8b6.png" alt="mulit-images-render"></p><h2 id="导入方案"><a class="header-anchor" href="#导入方案" aria-hidden="true">#</a> 导入方案</h2><p>使用 <code>import.meta.glob</code> 函数从文件系统导入多个模块，然后遍历渲染。</p><p><a href="https://cn.vitejs.dev/guide/features.html#glob-import" target="_blank" rel="noopener noreferrer">vite Glob 导入</a></p><div class="language-js"><pre><code><span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">&#39;./*.png&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\nObject<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> name <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\.\\/(.*)\\.png$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> module <span class="token operator">=</span> files<span class="token punctuation">[</span>path<span class="token punctuation">]</span>\n  <span class="token comment">// @ts-ignore</span>\n  modules<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> module<span class="token punctuation">.</span>default\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> modules\n</code></pre></div><p>渲染完成后结果如下：</p><div class="language-js"><pre><code><span class="token comment">// vite 生成的代码</span>\n<span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string-property property">&#39;./a.png&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./a.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&#39;./b.png&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./b.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>最后通过对象直接匹配获取即可</p><p>新版本 vite 中 <code>import.meta.globEager</code> 已经被废弃，需要使用 <code>import.meta.glob(&#39;*&#39;, { eager: true })</code> 来代替</p><p><a href="https://cn.vitejs.dev/guide/migration.html#removed-deprecated-apis" target="_blank" rel="noopener noreferrer">https://cn.vitejs.dev</a></p><h3 id="webpack-导入方案"><a class="header-anchor" href="#webpack-导入方案" aria-hidden="true">#</a> webpack 导入方案</h3><p>webpack 提供 <code>require.context</code> 遍历文件夹下的文件，从中获取指定文件，自动导入模块</p><div class="language-js"><pre><code><span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>require <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.png$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//批量读取模块文件</span>\n<span class="token keyword">const</span> modules <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">modules<span class="token punctuation">,</span> path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> name<span class="token punctuation">]</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\.\\/(.*)\\.png$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> module <span class="token operator">=</span> <span class="token function">files</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  modules<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> module<span class="token punctuation">.</span>default<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> modules<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> modules<span class="token punctuation">;</span>\n</code></pre></div>',17)];t.render=function(a,p,t,o,c,l){return n(),s("div",null,e)};export{p as __pageData,t as default};
